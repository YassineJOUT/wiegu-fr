{"version":3,"sources":["utilities/history.ts","utilities/validationSchema.tsx","utilities/config.ts","services/users.service.ts","utilities/reducers.ts","components/Register/Form/index.tsx","pages/layouts/Layout.tsx","pages/RegistrationPage.tsx","components/Login/Link/Chose.tsx","pages/LoginLink/ChosePage.tsx","components/Login/Link/Message.tsx","pages/LoginLink/MessagePage.tsx","utilities/useAuth.ts","components/Login/Link/Email.tsx","pages/LoginLink/EmailPage.tsx","components/Profile/ProfileEdit/Form/index.tsx","components/Shared/ImageInput.tsx","components/Shared/CoverImageInput.tsx","components/Profile/ProfileHeader/index.tsx","components/Profile/ProfileContent/index.tsx","components/Profile/index.tsx","components/Shared/Topbar.tsx","pages/layouts/ContentLayout.tsx","pages/ProfilePage.tsx","utilities/protectedRoute.tsx","components/Login/Form/index.tsx","pages/LoginPage.tsx","components/Login/Link/LinkVerify.tsx","pages/MagicLinkPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["history","createBrowserHistory","validEmail","Yup","email","max","required","validPassword","min","validConfirmationCode","test","t","toString","length","positive","validUsername","loginValidationSchema","shape","password","EmailValidationSchema","registrationSchema","confirmationCode","password1","oneOf","username","API_URL","process","REACT_APP_ENV","instance","axios","create","withCredentials","baseURL","headersOptions","headers","userService","formData","post","values","params","URLSearchParams","append","address","bio","id","token","user","undefined","age","reducer","state","action","type","success","message","error","RegisterForm","useReducer","dispatch","Submit","a","setSubmitting","resetForm","input","result","data","initialValues","terms","validationSchema","onSubmit","handleBlur","handleChange","handleSubmit","isSubmitting","Form","Card","centered","style","width","Content","margin","Header","fontSize","padding","Message","negative","Description","className","name","Field","placeholder","extra","paddingLeft","paddingRight","Checkbox","label","onChange","onBlur","checked","Button","color","fluid","size","loading","to","Layout","children","Grid","textAlign","height","verticalAlign","Column","maxWidth","as","RegisterPage","LoginChoseForm","marginBottom","LoginChosePage","withRouter","props","param","match","marginTop","LoginPagePage","saveState","serializedState","JSON","stringify","localStorage","setItem","initialContext","contextState","isLogged","role","setContext","Error","Context","createContext","LoginEmailForm","useContext","push","then","dataa","catch","err","LoginEmailPage","ProfileEditForm","handleProfileEdit","profileState","Divider","horizontal","ImageInput","profileImage","handleUpload","useState","preview","setPreview","setLoading","file","setFile","setSuccess","Modal","image","Image","wrapped","src","InputFile","e","event","persist","pre","URL","createObjectURL","target","files","handeImageChange","disabled","onClick","FormData","res","filename","uploadImage","labelPosition","icon","content","CoverImageInput","coverImage","ProfileHeader","ProfileImage","_id","authUser","setAuthUser","uploaded","setUploaded","uploadedProfile","setUploadedProfile","useEffect","response","statusCode","v","Disconnect","Loader","inverted","backgroundImage","columns","stackable","closeIcon","trigger","Label","Icon","circular","r","Container","Row","cursor","d","ProfileContent","Segment","raised","floating","List","divided","relaxed","Item","header","Profile","Topbar","activeItem","setActiveItem","visible","setVisible","segmentRef","React","useRef","Sidebar","Pushable","Group","Menu","animation","vertical","disconnect","Ref","innerRef","pointing","secondary","active","position","Input","ContentLayout","ProfilePage","ProtectedRoute","render","redirectPath","isAuthenticated","authenticationPath","component","pathname","Route","LoginForm","value","LoginPage","console","log","top","MagicLinkPage","loadedState","getItem","parse","loadState","App","context","defaultProtectedRouteProps","Provider","path","exact","LoginTextPage","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.de39ad35.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\n\n\nexport const history = createBrowserHistory();","import * as Yup from \"yup\";\n\nconst validEmail = Yup.string()\n  .email(\"Must be a valid email address\")\n  .max(255, \"Too long for an email\")\n  .required(\"Email is required\");\n\nconst validPassword = Yup.string()\n  .min(8, \"Password must have at least 8 caracters\")\n  .max(255, \"Too long password\")\n  .required(\"Password is required\");\n\nconst validConfirmationCode = Yup.number()\n  .test(\n    \"len\",\n    \"Confirmation code must be a 4 digits number\",\n    (t) => t && t.toString().length === 4\n  )\n  .positive(\"Confirmation code must be positive\")\n  .required(\"Confirmation code is required\");\n\nconst validUsername = Yup.string()\n  .min(3, \"Username must have more than 3 caracters\")\n  .max(50, \"Username must have less than 50 caracters\")\n  .required(\"Username is required\");\n\n// const validTerms = Yup.boolean().oneOf([true], 'Must Accept Terms of Service');\n\nexport const loginValidationSchema = Yup.object().shape({\n  email: validEmail,\n  password: validPassword,\n});\n\nexport const EmailValidationSchema = Yup.object().shape({\n  email: validEmail,\n});\n\nexport const confirmationCodeFormSchema = Yup.object().shape({\n  confirmationCode: validConfirmationCode,\n});\nexport const resetPasswordSchema = Yup.object().shape({\n  password1: validPassword,\n  password: Yup.string().oneOf(\n    [Yup.ref(\"password1\"), null],\n    \"Passwords must match\"\n  ),\n});\n\nexport const registrationSchema = Yup.object().shape({\n  //t//erms: validTerms,\n  username: validUsername,\n  email: validEmail,\n  password: validPassword,\n});\n","const isDev = process.env.REACT_APP_ENV === \"development\";\nexport const API_URL = isDev\n  ? \"http://localhost:3010/\"\n  : \"http://weigu-api.yj-dev.com/\";\n","import axios from \"axios\";\nimport { signUpInput } from \"../types/Registration\";\nimport { API_URL } from \"../utilities/config\";\nimport { editProfileType } from \"../components/Profile/ProfileEdit/Form\";\n\n\nconst instance = axios.create({\n  withCredentials: true,\n  baseURL: API_URL,\n});\nconst headersOptions: {} = {\n  headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n};\n// const headersOptionsUpload: {} = {\n//   headers: { \"Content-Type\": \"multipart/form-data\" },\n// };\n\ntype loginInput = {\n  email: string;\n  password: string;\n};\n\ntype emailType = {\n  email: string;\n};\n\n// const getStore = () => {\n//     const endPoint: string = `${API_URL}users/getStore.php`;\n//     return axios.get(\n//       endPoint,\n//       headersOptions\n//     );\n//   }\n\nconst login = (values: loginInput) => {\n  let params = new URLSearchParams();\n  params.append(\"email\", values.email);\n  params.append(\"password\", values.password);\n  return instance.post(\"users/signin\", params, headersOptions);\n};\n\nconst magicLink = (values: emailType) => {\n  let params = new URLSearchParams();\n  params.append(\"email\", values.email);\n  return instance.post(\"users/linkSignin\", params, headersOptions);\n};\nconst editProfile = (values: editProfileType) => {\n  let params = new URLSearchParams();\n  params.append(\"address\", values.address);\n  params.append(\"password\", values.password);\n  params.append(\"bio\", values.bio);\n  params.append(\"id\", values.id || \"\");\n  return instance.post(\"users/editProfile\", params, headersOptions);\n};\n\nconst magicLinkVerifiy = (token: string) => {\n  let params = new URLSearchParams();\n  params.append(\"token\", token);\n  return instance.post(\"users/linkVerify\", params, headersOptions);\n};\n\nconst signUp = (user: signUpInput) => {\n  let params = new URLSearchParams();\n  params.append(\"email\", user.email);\n  params.append(\"username\", user.username);\n  params.append(\"password\", user.password === undefined ? \"\" : user.password);\n  params.append(\"age\", user.age === undefined ? \"0\" : user.age.toString());\n  return instance.post(\"users/signup\", params);\n};\n\nconst passwordForgotten = (email: string, confirmationCoode: string = \"\") => {\n  let params = new URLSearchParams();\n  params.append(\"email\", email);\n  params.append(\"confirmationCode\", confirmationCoode);\n  return instance.post(\"users/passwordForgotten\", params, headersOptions);\n};\n\nconst profile = (id: string) => {\n  let params = new URLSearchParams();\n  params.append(\"userId\", id);\n  return instance.post(\"users/profile\", params, headersOptions);\n};\n\nconst resetPassword = (\n  email: string,\n  confirmationCoode: string,\n  password: string\n) => {\n  let params = new URLSearchParams();\n  params.append(\"email\", email);\n  params.append(\"confirmationCode\", confirmationCoode);\n  params.append(\"password\", password);\n\n  return instance.post(\"users/resetPassword\", params, headersOptions);\n};\n\nconst uloadImage = (formData: FormData) => {\n  return instance.post(\n    \"users/upload\",\n    formData \n  );\n};\nexport const userService = {\n  // getStore,\n  uloadImage,\n  editProfile,\n  magicLinkVerifiy,\n  magicLink,\n  profile,\n  login,\n  signUp,\n  passwordForgotten,\n  resetPassword,\n};\n","import { State, Action, StateImage } from \"./types\";\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"success\":\n      return { success: true, message: action.message };\n    case \"failure\":\n      return { success: false, error: action.error };\n    default:\n      return { ...state };\n  }\n};\nexport const reducerImage = (state: StateImage, action: Action): StateImage => {\n  switch (action.type) {\n    case \"preview\":\n      return {\n        success: false,\n        message: \"\",\n        loading: false,\n        preview: action.preview,\n        file: action.file,\n      };\n    case \"success\":\n      return { success: true, message: action.message, loading: false };\n    case \"failure\":\n      return { success: false, error: action.error, loading: false };\n    case \"request\":\n      return { success: false,  loading: true };\n    default:\n      return { ...state };\n  }\n};\n","import React, { useReducer } from \"react\";\nimport { Card, Form, Button, Message, Checkbox } from \"semantic-ui-react\";\nimport { Formik, Field, ErrorMessage } from \"formik\";\nimport { registrationSchema } from \"../../../utilities/validationSchema\";\nimport { Link } from \"react-router-dom\";\nimport { userService } from \"../../../services/users.service\";\nimport { reducer } from \"../../../utilities/reducers\";\nimport { formValues } from \"../../../utilities/types\";\n\nconst RegisterForm: React.SFC = () => {\n  const [{ success, message, error }, dispatch] = useReducer(reducer, {\n    success: false,\n    error: \"\",\n    message: \"\",\n  });\n\n  const Submit = async (\n    values: formValues,\n    {\n      setSubmitting,\n      resetForm,\n    }: { setSubmitting: Function; resetForm: Function }\n  ) => {\n    setSubmitting(true);\n    dispatch({ type: \"request\" });\n    try {\n      const input = {\n        email: values.email,\n        password: values.password,\n        username: values.username || \"\",\n      };\n      const result = await userService.signUp(input);\n      const data = { ...result.data };\n      if (data.success) {\n        dispatch({ type: \"success\", message: data.message });\n      } else {\n        dispatch({ type: \"failure\", error: data.error });\n      }\n    } catch (err) {\n      dispatch({ type: \"failure\", error: \"Something went wrong\" });\n    }\n    setSubmitting(false);\n    resetForm();\n  };\n  const initValues = { email: \"\", password: \"\", username: \"\", terms: false };\n  return (\n    <div>\n      <Formik\n        initialValues={initValues}\n        validationSchema={registrationSchema}\n        onSubmit={Submit}\n      >\n        {({ values, handleBlur, handleChange, handleSubmit, isSubmitting }) => (\n          <Form onSubmit={handleSubmit}>\n            <Card centered style={{ width: 450 }}>\n              <Card.Content style={{ margin: 30 }}>\n                <Card.Header style={{ fontSize: 22, padding: 30 }}>\n                  Rejoindre Weigu\n                </Card.Header>\n                {success && message && (\n                  <Message positive>\n                    <Message.Header>{message}</Message.Header>\n                  </Message>\n                )}\n                {!success && error && (\n                  <Message negative>\n                    <Message.Header>{error}</Message.Header>\n                  </Message>\n                )}\n                <Card.Description>\n                  <div className=\"msg-error\">\n                    {\" \"}\n                    <ErrorMessage name=\"email\" />\n                  </div>\n                  <Form.Field style={{ padding: 5 }}>\n                    <Field type=\"email\" name=\"email\" placeholder=\"E-mail\" />\n                  </Form.Field>\n                  <div className=\"msg-error\">\n                    <ErrorMessage name=\"password\" />\n                  </div>\n                  <Form.Field style={{ padding: 5 }}>\n                    <Field\n                      type=\"password\"\n                      name=\"password\"\n                      placeholder=\"Mot de passe\"\n                    />\n                  </Form.Field>\n                  <div className=\"msg-error\">\n                    {\" \"}\n                    <ErrorMessage name=\"username\" />\n                  </div>\n\n                  <Form.Field style={{ padding: 5 }}>\n                    <Field\n                      type=\"text\"\n                      name=\"username\"\n                      placeholder=\"Nom d'utilisateur\"\n                    />\n                  </Form.Field>\n                </Card.Description>\n              </Card.Content>\n              <Card.Content extra style={{ paddingLeft: 40, paddingRight: 40 }}>\n                <div className=\"msg-error\">\n                  {\" \"}\n                  <ErrorMessage name=\"terms\" />\n                </div>\n                <Form.Field>\n                  <Checkbox\n                    label=\"J'ai lu et j'accepte les conditions générales d'utilisation.\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    name=\"terms\"\n                    checked={values.terms}\n                  />\n                </Form.Field>\n                <Button\n                  type=\"submit\"\n                  color=\"teal\"\n                  fluid\n                  size=\"large\"\n                  {...(isSubmitting ? { loading: true } : {})}\n                >\n                  Rejoindre\n                </Button>\n              </Card.Content>\n            </Card>\n          </Form>\n        )}\n      </Formik>\n      <Message>\n        Déjà membre de Weigu ? <Link to=\"/login\">Se connecter</Link>\n        <br />\n        <Link to=\"/\">Mot de passe oublié ?</Link>\n      </Message>\n    </div>\n  );\n};\n\nexport default RegisterForm;\n","import React, { ReactNode } from \"react\";\nimport { Grid, Header } from \"semantic-ui-react\";\n\ntype Props = {\n  children: ReactNode;\n};\n\nconst Layout: React.SFC<Props> = ({ children }) => (\n  <div>\n    <Grid textAlign=\"center\" style={{ height: \"100vh\" }} verticalAlign=\"middle\">\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\n          {/* <Image src='/logo.png' /> Log-in to your account */}\n        </Header>\n        {children}\n      </Grid.Column>\n    </Grid>\n  </div>\n);\n\nexport default Layout;\n","import React from \"react\";\nimport RegisterForm from '../components/Register/Form'\nimport Layout from \"./layouts/Layout\";\n// Rejoindre Weigu\n// Adresse e-mail\n// Mot de passe\n// Nom d'utilisateur\n// I J'ai lu et j'accepte les conditions générales d'utilisation.\n// Rejoindre\n// Déjà membre de Wattpad ? Se connecter\n// Mot de passe oublié ?\nconst RegisterPage = () => (\n  <Layout>\n    <RegisterForm />\n  </Layout>\n);\n\nexport default RegisterPage;\n","import React from \"react\";\nimport { Card, Form, Button, Message } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\n// Nous vous avons envoyé un lien magique !\n// Nous avons envoyé un e-mail à monadresse@mail.com\n// Il contient un lien magique qui vous connectera à votre compte.\n// Connexion avec mot de passe\n\nconst LoginChoseForm: React.FunctionComponent = () => (\n  <div>\n    <Form>\n      <Card centered style={{ width: 450 }}>\n        <Card.Content style={{ margin: 20 }}>\n          <Card.Header style={{ fontSize: 22, padding: 30 }}>\n            Connexion à Weigu\n          </Card.Header>\n          {/* <Card.Meta>Joined in 2016</Card.Meta> */}\n          <Card.Description>\n            <Link to=\"/login-link\">\n              <Button\n                color=\"grey\"\n                fluid\n                size=\"large\"\n                style={{ marginBottom: 20 }}\n              >\n                Obtenir un lien magique\n              </Button>\n            </Link>\n            <Link to=\"/login\">\n              <Button type=\"submit\" color=\"teal\" fluid size=\"large\">\n                Connexion avec mot de passe\n              </Button>\n            </Link>\n          </Card.Description>\n        </Card.Content>\n      </Card>\n    </Form>\n    <Message>\n      <Link to=\"/login\">Retour</Link>\n    </Message>\n  </div>\n);\n\nexport default LoginChoseForm;\n","import React from \"react\";\nimport LoginChoseForm from '../../components/Login/Link/Chose'\nimport Layout from \"../layouts/Layout\";\n\nconst LoginChosePage = () => (\n  <Layout>\n    <LoginChoseForm />\n  </Layout>\n);\n\nexport default LoginChosePage;\n","import React from \"react\";\nimport { Card, Form, Button, Message } from \"semantic-ui-react\";\nimport { Link, RouteComponentProps, withRouter } from \"react-router-dom\";\n\n// Connexion avec mot de passe\n\nconst LoginMessageForm: React.FunctionComponent<RouteComponentProps> = (\n  props\n) => {\n  const param: any = { ...props.match.params };\n  return (\n    <div>\n      <Form>\n        <Card centered style={{ width: 450 }}>\n          <Card.Content style={{ margin: 20 }}>\n            <Card.Header style={{ fontSize: 22, padding: 30 }}>\n              Connexion à Weigu\n            </Card.Header>\n            {/* <Card.Meta>Joined in 2016</Card.Meta> */}\n            <Card.Description style={{ textAlign: \"left\" }}>\n              <p>Nous vous avons envoyé un lien magique ! </p>\n              <p>Nous avons envoyé un e-mail à {param.email}</p>\n              <p>\n                Il contient un lien magique qui vous connectera à votre compte.{\" \"}\n              </p>\n              <Link to=\"/login\">\n                <Button\n                  type=\"submit\"\n                  color=\"teal\"\n                  fluid\n                  size=\"large\"\n                  style={{ marginTop: 30 }}\n                >\n                  Connexion avec mot de passe\n                </Button>\n              </Link>\n            </Card.Description>\n          </Card.Content>\n        </Card>\n      </Form>\n      <Message>\n        <Link to=\"/\">Retour</Link>\n      </Message>\n    </div>\n  );\n};\n\nexport default withRouter(LoginMessageForm);\n","import React from \"react\";\nimport LoginMessageForm from '../../components/Login/Link/Message'\nimport Layout from \"../layouts/Layout\";\nimport { RouteComponentProps } from \"react-router-dom\";\n\nconst LoginPagePage: React.FunctionComponent<RouteComponentProps>  = () => (\n  <Layout>\n    <LoginMessageForm />\n  </Layout>\n);\n\nexport default LoginPagePage;\n","import { createContext, Dispatch, SetStateAction } from \"react\";\n\n// localStorage.js\nexport const loadState = (): Context => {\n  const serializedState = localStorage.getItem(\"Weigu-sate\");\n  if (serializedState !== null) {\n    return JSON.parse(serializedState);\n  } else return initialContext;\n};\n// localStorage.js\nexport const saveState = (state: Context) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(\"Weigu-sate\", serializedState);\n  } catch {}\n};\nexport interface AuthType {\n  isLogged: boolean;\n  user: {\n    id: string;\n    role: string;\n  };\n}\n\nexport const initialState: AuthType = {\n  isLogged: false,\n  user: {\n    id: \"\",\n    role: \"\",\n  },\n};\n\nexport type Context = {\n  contextState: AuthType;\n  setContext: Dispatch<SetStateAction<Context>>;\n};\n\nexport const initialContext: Context = {\n  contextState: initialState,\n  setContext: (): void => {\n    throw new Error(\"setContext function must be overridden\");\n  },\n};\nexport const Context = createContext<Context>(initialContext);\n","import React, { useContext, useReducer } from \"react\";\nimport { Card, Form, Button, Message } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { Formik, Field, ErrorMessage } from \"formik\";\nimport { EmailValidationSchema } from \"../../../utilities/validationSchema\";\nimport { Context } from \"../../../utilities/useAuth\";\nimport { history } from \"../../../utilities/history\";\nimport { reducer } from \"../../../utilities/reducers\";\nimport { userService } from \"../../../services/users.service\";\n\n// Connexion avec mot de passe\n\nconst LoginEmailForm: React.FunctionComponent = () => {\n\n  const {contextState } = useContext(Context);\n  if(contextState.isLogged) history.push(\"/profile\");\n  const [{ success, error,message }, dispatch] = useReducer(reducer, {\n    success: false,\n    error: \"\",\n    message: \"\",\n  });\n\n  const Submit = async (\n    values: { email: string},\n    {\n      setSubmitting,\n      resetForm,\n    }: { setSubmitting: Function; resetForm: Function }\n  ) => {\n    setSubmitting(true);\n    dispatch({ type: \"request\" });\n    await userService.magicLink(values).then(dataa => {\n      const data = { ...dataa.data };\n      if (data.success) {\n        //history push to profile\n        dispatch({ type: \"success\", message: \"Email Sent success\" });\n        history.push(\"/login-link-text/\"+values.email);\n      } else {\n        dispatch({ type: \"failure\", error: data.error });\n      }\n    \n    }).catch(err => {\n      dispatch({ type: \"failure\", error: \"Something went wrong\" });\n    });\n    \n    setSubmitting(false);\n    resetForm();\n  };\n\n  return (\n    <div>\n      <Formik\n        initialValues={{ email: \"\" }}\n        validationSchema={EmailValidationSchema}\n        onSubmit={Submit}\n      >\n        {({ handleSubmit,isSubmitting }) => (\n          <Form onSubmit={handleSubmit}>\n            <Card centered style={{ width: 450 }}>\n              <Card.Content style={{ margin: 20 }}>\n                <Card.Header style={{ fontSize: 22, padding: 30 }}>\n                  Connexion à Weigu\n                </Card.Header>\n                {success && message && (\n                  <Message positive>\n                    <Message.Header>{message}</Message.Header>\n                  </Message>\n                )}\n                {!success && error && (\n                  <Message negative>\n                    <Message.Header>{error}</Message.Header>\n                  </Message>\n                )}\n                {/* <Card.Meta>Joined in 2016</Card.Meta> */}\n                <Card.Description style={{ textAlign: \"left\" }}>\n                  <Form.Field style={{ padding: 5 }}>\n                    <div className=\"msg-error\">\n                      <ErrorMessage name=\"email\" />\n                    </div>\n                    <Field type=\"text\" placeholder=\"Email\" name=\"email\" />\n                  </Form.Field>\n                    <Button\n                      type=\"submit\"\n                      color=\"teal\"\n                      fluid\n                      size=\"large\"\n                      style={{ marginTop: 30 }}\n                    >\n                      {isSubmitting ? \"Loading...\" : \"Suivant\"}\n                    </Button>\n                </Card.Description>\n              </Card.Content>\n            </Card>\n          </Form>\n        )}\n      </Formik>\n      <Message>\n        <Link to=\"/login\">Retour</Link>\n      </Message>\n    </div>\n  );\n};\n\nexport default LoginEmailForm;\n","import React from \"react\";\nimport LoginEmailForm from '../../components/Login/Link/Email'\nimport Layout from \"../layouts/Layout\";\n\nconst LoginEmailPage: React.FunctionComponent = () => (\n  <Layout>\n    <LoginEmailForm />\n  </Layout>\n);\n\nexport default LoginEmailPage;\n","import React, { useContext, useReducer } from \"react\";\nimport {  Form, Button, Message, Divider } from \"semantic-ui-react\";\nimport { Context } from \"../../../../utilities/useAuth\";\nimport { history } from \"../../../../utilities/history\";\nimport { reducer } from \"../../../../utilities/reducers\";\nimport { userService } from \"../../../../services/users.service\";\nimport { Formik, ErrorMessage, Field } from \"formik\";\nimport { userState } from \"../../ProfileHeader\";\n\n// Connexion avec mot de passe\nexport type editProfileType = {\n  id?: string;\n  address: string;\n  bio: string;\n  password: string;\n};\n\nconst ProfileEditForm: React.FunctionComponent<{\n  handleProfileEdit: Function;\n  profileState: userState;\n}> = ({ handleProfileEdit, profileState }) => {\n  const { contextState } = useContext(Context);\n  if (!contextState.isLogged) history.push(\"/login\");\n  const [{ success, error, message }, dispatch] = useReducer(reducer, {\n    success: false,\n    error: \"\",\n    message: \"\",\n  });\n\n  const Submit = async (\n    values: editProfileType,\n    {\n      setSubmitting,\n      resetForm,\n    }: { setSubmitting: Function; resetForm: Function }\n  ) => {\n    setSubmitting(true);\n    dispatch({ type: \"request\" });\n    await userService\n      .editProfile({ ...values, id: contextState.user.id })\n      .then((dataa) => {\n        const data = { ...dataa.data };\n        if (data.success) {\n          handleProfileEdit({...profileState,...values});\n          dispatch({\n            type: \"success\",\n            message: \"Vos information sont modifier\",\n          });\n          history.push(\"/profile\");\n        } else {\n          dispatch({ type: \"failure\", error: data.error });\n        }\n      })\n      .catch((err) => {\n        dispatch({ type: \"failure\", error: \"Something went wrong\" });\n      });\n\n    setSubmitting(false);\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        address: profileState.address ? profileState.address : \"\",\n        bio: profileState.bio ? profileState.bio : \"\",\n        password: \"\",\n      }}\n      // validationSchema={EmailValidationSchema}\n      onSubmit={Submit}\n    >\n      {({ handleSubmit, isSubmitting }) => (\n        <Form onSubmit={handleSubmit} className=\"edit-profile-form\">\n          {success && message && (\n            <Message positive>\n              <Message.Header>{message}</Message.Header>\n            </Message>\n          )}\n          {!success && error && (\n            <Message negative>\n              <Message.Header>{error}</Message.Header>\n            </Message>\n          )}\n          {/* <Card.Meta>Joined in 2016</Card.Meta> */}\n          <Divider horizontal>Informations Personnelles</Divider>\n          <Form.Field style={{ padding: 5 }}>\n            <div className=\"msg-error\">\n              <ErrorMessage name=\"address\" />\n            </div>\n            <Field type=\"text\" placeholder=\"Adresse\" name=\"address\" />\n          </Form.Field>\n          <Form.Field style={{ padding: 5 }}>\n            <div className=\"msg-error\">\n              <ErrorMessage name=\"bio\" />\n            </div>\n            <Field type=\"text\" placeholder=\"Bio\" name=\"bio\" />\n          </Form.Field>\n          <Divider horizontal>Changer le mot de passe</Divider>\n          <Form.Field style={{ padding: 5 }}>\n            <div className=\"msg-error\">\n              <ErrorMessage name=\"password\" />\n            </div>\n            <Field type=\"text\" placeholder=\"Mot de passe\" name=\"password\" />\n          </Form.Field>\n          <Form.Field style={{ padding: 5 }}>\n            <div className=\"msg-error\">\n              <ErrorMessage name=\"confirmPassword\" />\n            </div>\n            <Field\n              type=\"text\"\n              placeholder=\"Confirmer le mot de passe\"\n              name=\"confirmPassword\"\n            />\n          </Form.Field>\n          <Button\n            type=\"submit\"\n            color=\"teal\"\n            fluid\n            size=\"large\"\n            style={{ marginTop: 30 }}\n          >\n            {isSubmitting ? \"Loading...\" : \"Enregistrer\"}\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default ProfileEditForm;\n","import React, { ChangeEvent, useState, useContext } from \"react\";\nimport { InputFile } from \"semantic-ui-react-input-file\";\nimport { Modal, Image, Button, Message } from \"semantic-ui-react\";\nimport { userService } from \"../../services/users.service\";\nimport { Context } from \"../../utilities/useAuth\";\n\nconst ImageInput: React.FunctionComponent<{ profileImage?: string | null,handleUpload: Function }> = ({\n  profileImage,\n  handleUpload\n}) => {\n  const { contextState } = useContext(Context);\n\n  const [preview, setPreview] = useState<null | string>(null);\n  const [loading, setLoading] = useState(false);\n  const [file, setFile] = useState<null | File>(null);\n  const [{ success, message, error }, setSuccess] = useState<{\n    success: boolean;\n    message: string | null;\n    error: string | null;\n  }>({\n    success: false,\n    message: \"\",\n    error: \"\",\n  });\n\n  const uploadImage = () => {\n    setLoading(true);\n    const formData = new FormData();\n    file && formData.append(\"image\", file);\n    formData.append(\"userId\", contextState.user.id);\n    formData.append(\"type\", \"profile\");\n\n    userService\n      .uloadImage(formData)\n      .then((res) => {\n        if (res.data.success) {\n            handleUpload(res.data.data.filename)\n          setSuccess({\n            success: true,\n            message: \"Image Uploaded\",\n            error: null,\n          });\n        } else {\n          setSuccess({\n            success: false,\n            message: null,\n            error: res.data.error,\n          });\n        }\n        setLoading(false);\n      })\n      .catch((err) => {\n        setSuccess({\n          success: false,\n          message: null,\n          error: \"Something went wrong\",\n        });\n        setLoading(false);\n      });\n  };\n  const handeImageChange = (event: ChangeEvent<HTMLInputElement>) => {\n    event.persist();\n    const pre = URL.createObjectURL(\n      event.target.files && event.target.files[0]\n    );\n    setFile(event.target.files?.[0] || null);\n    setPreview(pre);\n  };\n  return (\n    <Modal.Content image>\n      <Image\n        wrapped\n        size=\"medium\"\n        src={\n          preview\n            ? preview\n            : profileImage\n            ? profileImage\n            : \"http://localhost:3010/users/matthew-7e89.png\"\n        }\n        centered\n      />\n      <Modal.Description>\n        <br />\n        <br />\n        <InputFile\n          input={{\n            id: \"input-control-id\",\n            onChange: (e) => handeImageChange(e),\n          }}\n        />\n        <br />\n        <br />\n        <Button\n          disabled={preview === null}\n          onClick={() => uploadImage()}\n          positive\n          labelPosition=\"right\"\n          icon=\"checkmark\"\n          content=\"Upload\"\n          {...(loading && { loading: true })}\n        />\n        <br />\n        {success && message && (\n          <Message positive>\n            <Message.Header>{message}</Message.Header>\n          </Message>\n        )}\n        {!success && error && (\n          <Message negative>\n            <Message.Header>{error}</Message.Header>\n          </Message>\n        )}\n      </Modal.Description>\n    </Modal.Content>\n  );\n};\n\nexport default ImageInput;\n","import React, { ChangeEvent, useState, useContext } from \"react\";\nimport { InputFile } from \"semantic-ui-react-input-file\";\nimport { Modal, Image, Button, Message } from \"semantic-ui-react\";\nimport { userService } from \"../../services/users.service\";\nimport { Context } from \"../../utilities/useAuth\";\nimport { history } from \"../../utilities/history\";\n\nconst CoverImageInput: React.FunctionComponent<{ coverImage: string | null,handleUpload: Function }> = ({\n    coverImage,\n    handleUpload\n}) => {\n  const { contextState } = useContext(Context);\n\n  const [preview, setPreview] = useState<null | string>(null);\n  const [loading, setLoading] = useState(false);\n  const [file, setFile] = useState<null | File>(null);\n  const [{ success, message, error }, setSuccess] = useState<{\n    success: boolean;\n    message: string | null;\n    error: string | null;\n  }>({\n    success: false,\n    message: \"\",\n    error: \"\",\n  });\n\n  const uploadImage = () => {\n    setLoading(true);\n    const formData = new FormData();\n    file && formData.append(\"image\", file);\n    formData.append(\"userId\", contextState.user.id);\n    formData.append(\"type\", \"cover\");\n\n    userService\n      .uloadImage(formData)\n      .then((res) => {\n        if (res.data.success) {\n            handleUpload(res.data.data.filename);\n          setSuccess({\n            success: true,\n            message: \"Image Uploaded\",\n            error: null,\n          });\n        } else {\n          setSuccess({\n            success: false,\n            message: null,\n            error: res.data.error,\n          });\n        }\n        //\n        history.push(\"/profile\")\n        setLoading(false);\n      })\n      .catch((err) => {\n        setSuccess({\n          success: false,\n          message: null,\n          error: \"Something went wrong\",\n        });\n        setLoading(false);\n      });\n  };\n  const handeImageChange = (event: ChangeEvent<HTMLInputElement>) => {\n    event.persist();\n    const pre = URL.createObjectURL(\n      event.target.files && event.target.files[0]\n    );\n    setFile(event.target.files?.[0] || null);\n    setPreview(pre);\n  };\n  return (\n    <Modal.Content image>\n      <Image\n        wrapped\n        size=\"large\"\n        src={\n          preview\n            ? preview\n            : coverImage\n            ? coverImage\n            : \"./images/cover.png\"\n        }\n        centered\n      />\n      <Modal.Description>\n        <br />\n        <br />\n        <InputFile\n          input={{\n            id: \"input-control-id\",\n            onChange: (e) => handeImageChange(e),\n          }}\n        />\n        <br />\n        <br />\n        <Button\n          disabled={preview === null}\n          onClick={() => uploadImage()}\n          positive\n          labelPosition=\"right\"\n          icon=\"checkmark\"\n          content=\"Upload\"\n          {...(loading && { loading: true })}\n        />\n        <br />\n        {success && message && (\n          <Message positive>\n            <Message.Header>{message}</Message.Header>\n          </Message>\n        )}\n        {!success && error && (\n          <Message negative>\n            <Message.Header>{error}</Message.Header>\n          </Message>\n        )}\n      </Modal.Description>\n    </Modal.Content>\n  );\n};\n\nexport default CoverImageInput;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport {\n  Container,\n  Image,\n  Grid,\n  Icon,\n  Modal,\n  Label,\n  Loader,\n} from \"semantic-ui-react\";\nimport ProfileEditForm from \"../ProfileEdit/Form\";\nimport { API_URL } from \"../../../utilities/config\";\nimport ImageInput from \"../../Shared/ImageInput\";\nimport CoverImageInput from \"../../Shared/CoverImageInput\";\nimport { Context } from \"../../../utilities/useAuth\";\nimport { history } from \"../../../utilities/history\";\nimport { userService } from \"../../../services/users.service\";\n\nexport interface userState {\n  ProfileImage: string;\n  address: string;\n  bio: string;\n  coverImage: string;\n  email: string;\n  profileImage: string;\n  username: string;\n  _id: string;\n}\nconst ProfileHeader: React.FunctionComponent = () => {\n  const initalState = {\n    ProfileImage: \"\",\n    address: \"\",\n    bio: \"\",\n    coverImage: \"\",\n    email: \"\",\n    profileImage: \"\",\n    username: \"\",\n    _id: \"\",\n  };\n  const [authUser, setAuthUser] = useState<userState>(initalState);\n  const [loading, setLoading] = useState(false);\n  const [uploaded, setUploaded] = useState<string | null>(null);\n  const [uploadedProfile, setUploadedProfile] = useState<string | null>(null);\n  const { contextState, setContext } = useContext(Context);\n\n  const Disconnect = () => {\n    const v = {\n      contextState: {\n        isLogged: false,\n        user: {\n          id: \"\",\n          role: \"\",\n        },\n      },\n      setContext,\n    };\n    setContext(v);\n    useState(v);\n    history.push(\"/login\");\n  };\n  if (!contextState.isLogged) history.push(\"/login\");\n  useEffect(() => {\n    setLoading(true);\n    userService\n      .profile(contextState.user.id)\n      .then((res) => {\n        if (res.data.success) setAuthUser(res.data.data);\n        setLoading(false);\n        //handle errors\n      })\n      .catch((err) => {\n        err.response.data.statusCode === 401 && Disconnect();\n        setLoading(false);\n      });\n  }, []);\n\n  // const userHandlre = \"@\" + data.username;\n  // const userBio = \"Bio : \" + data.bio;\n  // const userAddress = data.address;\n  // const cover = data.coverImage\n  //   ? API_URL + \"users/\" + data.coverImage\n  //   : \"./images/cover.png\";\n  return (\n    <div className=\"profile-header-container\">\n      {loading ? (\n        <Loader inverted />\n      ) : (\n        <div\n          className=\"profile-header-cover\"\n          style={{\n            backgroundImage: `url('${\n              uploaded\n                ? API_URL + \"users/\" + uploaded\n                : authUser.coverImage\n                ? API_URL + \"users/\" + authUser.coverImage\n                : \"http://localhost:3010/users/default-cover.png\"\n            }')`,\n          }}\n        >\n          <Grid columns={3} stackable>\n            <Grid.Column>\n              <Modal\n                closeIcon\n                size={\"fullscreen\"}\n                trigger={\n                  <Label as=\"a\">\n                    <Icon name=\"photo\" />\n                  </Label>\n                }\n              >\n                <Modal.Header>Selectioner une photo de couverture</Modal.Header>\n\n                <CoverImageInput\n                  handleUpload={(t: string) => setUploaded(t)}\n                  coverImage={\n                    uploaded\n                      ? API_URL + \"users/\" + uploaded\n                      : authUser.coverImage\n                      ? API_URL + \"users/\" + authUser.coverImage\n                      : \"http://localhost:3010/users/default-cover.png\"\n                  }\n                />\n              </Modal>\n            </Grid.Column>\n\n            <Grid.Column>\n              <Modal\n                size={\"tiny\"}\n                trigger={\n                  <Image\n                    className=\"profile-photo\"\n                    src={\n                      uploadedProfile\n                        ? API_URL + \"users/\" + uploadedProfile\n                        : authUser.profileImage\n                        ? API_URL + \"users/\" + authUser.profileImage\n                        : \"http://localhost:3010/users/default-profile.png\"\n                    }\n                    size=\"small\"\n                    circular\n                    centered\n                  />\n                }\n              >\n                <Modal.Header>Selectioner une photo de profil</Modal.Header>\n\n                <ImageInput\n                  handleUpload={(r: string) => setUploadedProfile(r)}\n                  profileImage={\n                    authUser.profileImage\n                      ? API_URL + \"users/\" + authUser.profileImage\n                      : \"http://localhost:3010/users/default-profile.png\"\n                  }\n                />\n              </Modal>\n              <Container>\n                <Grid>\n                  <Grid.Row centered>\n                    <div className=\"profile-btn-controls\">\n                      <span className=\"profile-btn-controls-items\">\n                        {\"@\" + authUser.username}\n                      </span>\n                      <br />\n                      <br />\n                      <span className=\"profile-btn-controls-items\">\n                        {authUser.bio\n                          ? \"Bio : \" + authUser.bio\n                          : \"Votre bio n'est pas encore défini\"}\n                      </span>\n                      <br />\n                      <br />\n                      <span className=\"profile-btn-controls-items\">\n                        <Icon name=\"map marker alternate\" color=\"grey\" />\n                        {authUser.address\n                          ? authUser.address\n                          : \"Votre Adresse n'est pas encore défini\"}\n                      </span>\n                    </div>\n                  </Grid.Row>\n                </Grid>\n              </Container>\n            </Grid.Column>\n\n            <Grid.Column>\n              <Container>\n                <Grid>\n                  <Grid.Row centered>\n                    <div className=\"profile-btn-controls-btns\">\n                      <Modal\n                        trigger={\n                          <span\n                            className=\"profile-btn-controls-items\"\n                            style={{ cursor: \"pointer\" }}\n                          >\n                            Edit Profile\n                          </span>\n                        }\n                      >\n                        <Modal.Header>Editer le profil</Modal.Header>\n                        <Modal.Content>\n                          <Modal.Description>\n                            <ProfileEditForm\n                              profileState={authUser}\n                              handleProfileEdit={(d: userState) =>\n                                setAuthUser(d)\n                              }\n                            />\n                          </Modal.Description>\n                        </Modal.Content>\n                      </Modal>\n\n                      <br />\n                      <br />\n                      <span\n                        className=\"profile-btn-controls-items\"\n                        style={{ cursor: \"pointer\" }}\n                      >\n                        <Icon name=\"share\" color=\"grey\" />\n                        {\"share\"}\n                      </span>\n                    </div>\n                  </Grid.Row>\n                </Grid>\n              </Container>\n            </Grid.Column>\n          </Grid>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProfileHeader;\n","import React from \"react\";\nimport {\n  Grid,\n  Segment,\n  Header,\n  Divider,\n  Container,\n  List,\n  Message,\n  Label,\n} from \"semantic-ui-react\";\n\nconst ProfileContent: React.FunctionComponent = () => {\n  return (\n    <div>\n      <Container>\n        <Grid stackable columns={2} centered>\n          <Grid.Column>\n            <Container textAlign=\"center\">\n              <Segment raised>\n                <Label color=\"red\" floating>\n                  22\n                </Label>\n                <Header as=\"h2\">Mon Journal</Header>\n                <Divider />\n                <div>\n                  <List divided relaxed>\n                    <List.Item>\n                      <List.Icon\n                        name=\"pencil\"\n                        size=\"large\"\n                        verticalAlign=\"middle\"\n                      />\n                      <List.Content>\n                        <List.Header as=\"a\">Ecrir dans</List.Header>\n                      </List.Content>\n                    </List.Item>\n                    <List.Item>\n                      <List.Icon\n                        name=\"eye\"\n                        size=\"large\"\n                        verticalAlign=\"middle\"\n                      />\n                      <List.Content>\n                        <List.Header as=\"a\">Lire</List.Header>\n                      </List.Content>\n                    </List.Item>\n                    <List.Item>\n                      <List.Icon\n                        name=\"search\"\n                        size=\"large\"\n                        verticalAlign=\"middle\"\n                      />\n                      <List.Content>\n                        <List.Header as=\"a\">Chercher</List.Header>\n                      </List.Content>\n                    </List.Item>\n                  </List>\n                </div>\n              </Segment>\n            </Container>\n          </Grid.Column>\n          <Grid.Column>\n            <Container textAlign=\"center\">\n              <Segment>\n              <Label color=\"blue\" floating>\n                  3\n                </Label>\n                <Header as=\"h2\">Mes Commentaire</Header>\n                <Divider />\n                <div>\n                  <List divided relaxed>\n                    <List.Item>\n                      <List.Icon\n                        name=\"eye\"\n                        size=\"large\"\n                        verticalAlign=\"middle\"\n                      />\n                      <List.Content>\n                        <List.Header as=\"a\">Lire</List.Header>\n                      </List.Content>\n                    </List.Item>\n                  </List>\n                </div>\n              </Segment>\n            </Container>\n          </Grid.Column>\n        </Grid>\n      </Container>\n      <div className=\"msg-container\">\n        <Message\n          header=\"Welcome back!\"\n          content=\"This is a special notification which you can dismiss.\"\n        />\n        <Message\n          header=\"Welcome back!\"\n          content=\"This is a special notification which you can dismiss.\"\n        />\n        <Message\n          header=\"Welcome back!\"\n          content=\"This is a special notification which you can dismiss.\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileContent;\n","import React from \"react\";\nimport {  Divider } from \"semantic-ui-react\";\nimport ProfileHeader from \"./ProfileHeader\";\nimport ProfileContent from \"./ProfileContent\";\n\nconst Profile: React.FunctionComponent = () => {\n\n  return (\n    <div style={{ height: \"100vh\" }}>\n      <ProfileHeader />\n      <Divider />\n      <ProfileContent />\n    </div>\n  );\n};\n\nexport default Profile;\n","import React, { useState, useContext } from \"react\";\nimport { Icon, Menu, Input, Sidebar, Ref, Segment } from \"semantic-ui-react\";\nimport { Context, saveState } from \"../../utilities/useAuth\";\nimport { history } from \"../../utilities/history\";\n\nconst Topbar: React.FunctionComponent = (props) => {\n  const { contextState, setContext } = useContext(Context);\n  const [activeItem, setActiveItem] = useState(1);\n  const [visible, setVisible] = useState(false);\n  const segmentRef = React.useRef();\n\n  const disconnect = () => {\n    const v = {\n      contextState: {\n        isLogged: false,\n        user: {\n          id: \"\",\n          role: \"\",\n        },\n      },\n      setContext,\n    };\n    setContext(v);\n    saveState(v);\n    history.push(\"/login\");\n  };\n  return (\n    <div>\n      {}\n      <Sidebar.Pushable as={Segment.Group} raised>\n        <Sidebar\n          as={Menu}\n          animation=\"overlay\"\n          icon=\"labeled\"\n          inverted\n          vertical\n          target={segmentRef}\n          visible={visible}\n          width=\"thin\"\n        >\n          <Menu.Item as=\"a\">Menu Item 1</Menu.Item>\n          <Menu.Item as=\"a\">Menu Item 2</Menu.Item>\n          <Menu.Item as=\"a\">Menu Item 3</Menu.Item>\n          <Menu.Item as=\"a\" onClick={() => disconnect()}>\n            Deconnexion\n          </Menu.Item>\n        </Sidebar>\n\n        <Ref innerRef={segmentRef}>\n          <div>\n            <Segment>\n              <Menu pointing secondary size=\"small\">\n                <Menu.Item\n                  as=\"a\"\n                  name=\"home\"\n                  active={activeItem === 1}\n                  onClick={() => setActiveItem(1)}\n                >\n                  <Icon size=\"big\" name=\"home\" />\n                </Menu.Item>\n                <Menu.Item\n                  as=\"a\"\n                  name=\"user\"\n                  active={activeItem === 2}\n                  onClick={() => setActiveItem(2)}\n                >\n                  <Icon size=\"big\" name=\"user circle\" />\n                </Menu.Item>\n                <Menu.Item\n                  as=\"a\"\n                  name=\"messages\"\n                  active={activeItem === 3}\n                  onClick={() => setActiveItem(3)}\n                >\n                  <Icon size=\"big\" name=\"copy outline\" />\n                </Menu.Item>\n                <Menu.Item\n                  as=\"a\"\n                  name=\"notification\"\n                  active={activeItem === 4}\n                  onClick={() => setActiveItem(4)}\n                >\n                  <Icon size=\"big\" name=\"mail outline\" />\n                </Menu.Item>\n\n                <Menu.Menu position=\"right\">\n                  <Menu.Item>\n                    <Input\n                      className=\"icon\"\n                      icon=\"search\"\n                      placeholder=\"Search for a user...\"\n                    />\n                  </Menu.Item>\n                  <Menu.Item onClick={() => setVisible(visible ? false : true)}>\n                    <Icon size=\"big\" name=\"align justify\" />\n                  </Menu.Item>\n                </Menu.Menu>\n              </Menu>\n            </Segment>\n            {props.children}\n          </div>\n        </Ref>\n      </Sidebar.Pushable>\n    </div>\n  );\n};\n\nexport default Topbar;\n","import React, { ReactNode } from \"react\";\nimport Topbar from \"../../components/Shared/Topbar\";\n\ntype Props = {\n  children: ReactNode;\n};\n\nconst ContentLayout: React.SFC<Props> = ({ children }) => (\n  <div className=\"content-page\">\n    <div className=\"content\">\n      <div className=\"content-fluid\">\n        <Topbar>\n        {children}\n        </Topbar>\n          \n          </div>\n    </div>\n  </div>\n);\n\nexport default ContentLayout;\n","\nimport React from \"react\";\nimport Profile from '../components/Profile';\nimport ContentLayout from \"./layouts/ContentLayout\";\n\nconst ProfilePage: React.FunctionComponent = () => (\n  <ContentLayout>\n    <Profile />\n  </ContentLayout>\n);\n\nexport default ProfilePage;\n","import * as React from 'react';\nimport {Redirect, Route, RouteProps} from 'react-router';\n\nexport interface ProtectedRouteProps extends RouteProps {\n    isAuthenticated: boolean;\n    authenticationPath: string;\n}\n\n class ProtectedRoute extends Route<ProtectedRouteProps> {\n     \n     render = () => {\n        let redirectPath: string = '';\n        if (!this.props.isAuthenticated) {\n            redirectPath = this.props.authenticationPath;\n        }\n\n        if (redirectPath) {\n            return <Route {...this.props} component={() => (<Redirect to={{pathname: redirectPath}}/>)}  render={undefined}/>;\n        } else {\n            return <Route {...this.props}/>;\n        }\n    }\n}\n\nexport default ProtectedRoute;","import React, { useReducer, useContext } from \"react\";\nimport { Card, Form, Button, Message } from \"semantic-ui-react\";\nimport { Formik, ErrorMessage } from \"formik\";\nimport { loginValidationSchema } from \"../../../utilities/validationSchema\";\nimport { Link } from \"react-router-dom\";\nimport { reducer } from \"../../../utilities/reducers\";\nimport { userService } from \"../../../services/users.service\";\nimport { history } from \"../../../utilities/history\";\nimport { Context, saveState } from \"../../../utilities/useAuth\";\n\nconst LoginForm: React.SFC = () => {\n  const { contextState, setContext } = useContext(Context);\n  if (contextState.isLogged) history.push(\"profile\");\n  const [{ success, error }, dispatch] = useReducer(reducer, {\n    success: false,\n    error: \"\",\n    message: \"\",\n  });\n  const Submit = async (\n    values: { email: string; password: string },\n    {\n      setSubmitting,\n      resetForm,\n    }: { setSubmitting: Function; resetForm: Function }\n  ) => {\n    setSubmitting(true);\n    dispatch({ type: \"request\" });\n    //try {\n    await userService\n      .login(values)\n      .then((dataa) => {\n        const data = { ...dataa.data };\n        if (data.success) {\n          //history push to profile\n          const { user } = data.data;\n          const v = {\n            contextState: {\n              isLogged: data.success,\n              user: {\n                id: user._id,\n                role: \"admin\",\n              },\n            },\n            setContext,\n          };\n          setContext(v);\n          saveState(v);\n          dispatch({ type: \"success\", message: \"Login success\" });\n          history.push(\"/profile\");\n        } else {\n          dispatch({ type: \"failure\", error: data.error });\n        }\n\n        resetForm();\n      })\n      .catch((err) => {\n        dispatch({ type: \"failure\", error: \"Something went wrong\" });\n      });\n\n    setSubmitting(false);\n    resetForm();\n  };\n\n  return (\n    <div>\n      <Formik\n        initialValues={{ email: \"\", password: \"\" }}\n        validationSchema={loginValidationSchema}\n        onSubmit={Submit}\n      >\n        {({ values, handleBlur, handleChange, handleSubmit, isSubmitting }) => (\n          <Form onSubmit={handleSubmit}>\n            <Card centered style={{ width: 450 }}>\n              <Card.Content style={{ margin: 20 }}>\n                <Card.Header style={{ fontSize: 22, padding: 30 }}>\n                  Connexion à Weigu\n                </Card.Header>\n                {!success && error && (\n                  <Message negative>\n                    <Message.Header>{error}</Message.Header>\n                  </Message>\n                )}\n                <Card.Description>\n                  <div className=\"msg-error\">\n                    {\" \"}\n                    <ErrorMessage name=\"email\" />\n                  </div>\n                  <Form.Field style={{ padding: 5 }}>\n                    <input\n                      type=\"email\"\n                      placeholder=\"E-mail\"\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      name=\"email\"\n                      value={values.email}\n                    />\n                  </Form.Field>\n                  <div className=\"msg-error\">\n                    {\" \"}\n                    <ErrorMessage name=\"password\" />\n                  </div>\n                  <Form.Field style={{ padding: 5 }}>\n                    <input\n                      type=\"password\"\n                      placeholder=\"Mot de passe\"\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      name=\"password\"\n                      value={values.password}\n                    />\n                  </Form.Field>\n                </Card.Description>\n              </Card.Content>\n              <Card.Content extra style={{ paddingLeft: 40, paddingRight: 40 }}>\n                <Button\n                  type=\"submit\"\n                  color=\"teal\"\n                  fluid\n                  size=\"large\"\n                  {...(isSubmitting ? { loading: true } : {})}\n                >\n                  Connexion\n                </Button>\n              </Card.Content>\n            </Card>\n          </Form>\n        )}\n      </Formik>\n      <Message>\n        Pas de compte ? <Link to=\"/register\">Rejoindre Weigu</Link>\n        <br />\n        <Link to=\"/\">Mot de passe oublié ?</Link>\n      </Message>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","// Connexion à Weigu\n// E-mail\n// Mot de passe\n// Connexion\n// Mot de passe oublié ?\nimport React from \"react\";\nimport LoginForm from \"../components/Login/Form\";\nimport Layout from \"./layouts/Layout\";\n\nconst LoginPage: React.FunctionComponent = () => (\n  <Layout>\n    <LoginForm />\n  </Layout>\n);\n\nexport default LoginPage;\n","import React, { useEffect, useContext, useReducer, useState } from \"react\";\nimport { Card, Loader, Message } from \"semantic-ui-react\";\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\nimport { userService } from \"../../../services/users.service\";\nimport { history } from \"../../../utilities/history\";\nimport { Context, saveState } from \"../../../utilities/useAuth\";\nimport { reducer } from \"../../../utilities/reducers\";\n\n// Connexion avec mot de passe\n\nconst LinkVerify: React.FunctionComponent<RouteComponentProps> = (props) => {\n  const { contextState, setContext } = useContext(Context);\n  if (contextState.isLogged) history.push(\"/profile\");\n  const [loading, setLoading] = useState(false);\n  const [{ success, error }, dispatch] = useReducer(reducer, {\n    success: false,\n    error: \"\",\n    message: \"\",\n  });\n  const param: any = { ...props.match.params };\n  // send request to api to verify token\n  useEffect(() => {\n    setLoading(true);\n    dispatch({ type: \"request\" });\n    userService\n      .magicLinkVerifiy(param.token)\n      .then((res) => {\n        if (res.data.success) {\n          //Redirect to\n          dispatch({ type: \"success\", message: \" Vous avez un token valide\" });\n          console.log(\"after token verify\");\n          console.log(res.data);\n          const v = {\n            contextState: {\n              isLogged: res.data.success,\n              user: {\n                id: res.data.id,\n                role: \"admin\",\n              },\n            },\n            setContext,\n          };\n          setContext(v);\n          saveState(v);\n          history.push(\"/profile\");\n        } else {\n          dispatch({ type: \"failure\", error: res.data.error });\n        }\n        setLoading(false);\n      })\n      .catch((err) => {\n        dispatch({ type: \"failure\", error: \"something went wrong\" });\n        setLoading(false);\n      });\n  }, [param.token, setContext]);\n  return (\n    <div>\n      {!success && error && (\n        <Message negative>\n          <Message.Header>{error}</Message.Header>\n        </Message>\n      )}\n    { loading && <Loader active content=\"Verifiying link\" style={{ top: -20 }} />}\n      <Card centered style={{ width: 450 }}>\n        <Card.Content style={{ margin: 20 }}>\n          <Card.Header style={{ fontSize: 22, padding: 40 }}>\n            Connexion à Weigu\n          </Card.Header>\n          {/* <Card.Meta>Joined in 2016</Card.Meta> */}\n          <Card.Description style={{ textAlign: \"center\" }}>\n            <p>Veuilliez patientez nous verifions votre lien magic</p>\n          </Card.Description>\n        </Card.Content>\n      </Card>\n    </div>\n  );\n};\n\nexport default withRouter(LinkVerify);\n","// Connexion à Weigu\n// E-mail\n// Mot de passe\n// Connexion\n// Mot de passe oublié ?\nimport React from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport LinkVerify from \"../components/Login/Link/LinkVerify\";\nimport Layout from \"./layouts/Layout\";\n\nconst MagicLinkPage: React.FunctionComponent<RouteComponentProps> = () => {\n  return (\n    <Layout>\n      <LinkVerify />\n    </Layout>\n  );\n};\n\nexport default MagicLinkPage;\n","import React, { useState } from \"react\";\nimport { Router, Route, Redirect } from \"react-router-dom\";\nimport { history } from \"./utilities/history\";\nimport RegisterPage from \"./pages/RegistrationPage\";\nimport LoginChosePage from \"./pages/LoginLink/ChosePage\";\nimport LoginTextPage from \"./pages/LoginLink/MessagePage\";\nimport LoginEmailPage from \"./pages/LoginLink/EmailPage\";\nimport ProfilePage from \"./pages/ProfilePage\";\nimport ProtectedRoute, {\n  ProtectedRouteProps,\n} from \"./utilities/protectedRoute\";\nimport './App.css'\nimport { Context, loadState } from \"./utilities/useAuth\";\nimport LoginPage from \"./pages/LoginPage\";\nimport MagicLinkPage from \"./pages/MagicLinkPage\";\nconst loadedState = loadState();\n\n\nconst App: React.FC = () => {\n  const [context, setContext] = useState<Context>(loadedState);\n\n  const defaultProtectedRouteProps: ProtectedRouteProps = {\n    isAuthenticated: context.contextState.isLogged,\n    authenticationPath: \"/\",\n  };\n  return (\n    <div>\n      <Context.Provider value={{ ...context, setContext }}>\n        <Router history={history}>\n          <Route\n            path=\"/\"\n            exact\n            component={() => (\n              <Redirect\n                to={context.contextState.isLogged ? \"/profile\" : \"/\"}\n              />\n            )}\n          />\n          <Route path=\"/login\" exact component={LoginPage} />\n          <Route path=\"/login-link\" exact component={LoginEmailPage} />\n          <Route path=\"/mlink/:token\" exact component={MagicLinkPage} />\n\n          {/* <ProtectedRoute\n            {...defaultProtectedRouteProps}\n            exact={true}\n            path=\"/login-link\"\n            component={LoginEmailForm}\n          /> */}\n\n          <ProtectedRoute\n            {...defaultProtectedRouteProps}\n            exact={true}\n            path=\"/profile\"\n            component={ProfilePage}\n          /> \n          <Route path=\"/register\" exact component={RegisterPage} />\n\n          {/* <ProtectedRoute\n            {...defaultProtectedRouteProps}\n            exact={true}\n            path=\"/register\"\n            component={RegisterPage}\n          />   */}\n          <Route path=\"/login-link-text/:email\" exact component={LoginTextPage} />\n\n          {/* <ProtectedRoute\n            {...defaultProtectedRouteProps}\n            exact={true}\n            path=\"/login-link-text\"\n            component={LoginTextPage}\n          /> */}\n          <Route path=\"/\" exact component={LoginChosePage} />\n\n          {/* <ProtectedRoute\n            {...defaultProtectedRouteProps}\n            exact={true}\n            path=\"/\"\n            component={LoginChosePage}\n          /> */}\n        </Router>\n      </Context.Provider>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}