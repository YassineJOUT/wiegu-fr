{"version":3,"sources":["assets/weigu-logo.png","assets/giphyz.gif","utilities/history.ts","utilities/validationSchema.tsx","utilities/config.ts","services/users.service.ts","utilities/reducers.ts","components/Register/Form/index.tsx","pages/layouts/Layout.tsx","pages/RegistrationPage.tsx","pages/LoginLink/MessagePage.tsx","utilities/useAuth.ts","components/Login/Link/Message.tsx","components/Login/Link/Email.tsx","pages/LoginLink/EmailPage.tsx","components/Shared/ImageInput.tsx","components/Shared/CoverImageInput.tsx","components/Profile/ProfileHeader/index.tsx","components/Profile/ProfileContent/index.tsx","components/Profile/index.tsx","components/Home/Allconnection/index.tsx","components/Login/Form/index.tsx","components/Home/modalAll/index.tsx","components/Shared/Topbar.tsx","pages/layouts/ContentLayout.tsx","pages/ProfilePage.tsx","utilities/protectedRoute.tsx","pages/LoginPage.tsx","components/Login/Link/LinkVerify.tsx","pages/MagicLinkPage.tsx","components/Shared/HomeCard/index.tsx","components/Home/Slider/index.tsx","components/Home/index.tsx","pages/HomePage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","history","createBrowserHistory","validEmail","Yup","email","max","required","validPassword","min","validConfirmationCode","test","t","toString","length","positive","validUsername","validTerms","oneOf","loginValidationSchema","shape","password","EmailValidationSchema","today","confirmationCode","password1","Date","validDate","transform","value","originalValue","isDate","parse","registrationSchema","terms","username","birthday","API_URL","process","REACT_APP_ENV","instance","axios","create","withCredentials","baseURL","headersOptions","headers","userService","formData","post","token","params","URLSearchParams","append","values","id","user","undefined","age","reducer","state","action","type","success","message","error","RegisterForm","useReducer","dispatch","Submit","a","setSubmitting","resetForm","input","result","data","initialValues","genre","validationSchema","onSubmit","handleSubmit","isSubmitting","errors","touched","setFieldValue","Form","Message","style","textAlign","Header","negative","padding","Field","width","className","name","placeholder","Grid","columns","GridRow","GridColumn","Checkbox","radio","label","checked","onClick","centered","Button","fluid","color","loading","Layout","children","height","verticalAlign","Column","maxWidth","as","RegisterPage","LoginPagePage","saveState","serializedState","JSON","stringify","localStorage","setItem","initialContext","contextState","isLogged","role","setContext","Error","Context","createContext","LoginMessage","props","LoginEmailForm","useContext","useState","sent","setSent","push","then","dataa","catch","err","LoginEmailPage","ImageInput","profileImage","handleUpload","preview","setPreview","setLoading","file","setFile","setSuccess","Modal","Content","image","Image","wrapped","size","src","Description","InputFile","onChange","e","event","persist","pre","URL","createObjectURL","target","files","handeImageChange","disabled","FormData","res","filename","uploadImage","labelPosition","icon","content","CoverImageInput","coverImage","ProfileHeader","ProfileImage","address","bio","_id","authUser","setAuthUser","uploaded","setUploaded","uploadedProfile","setUploadedProfile","useEffect","response","statusCode","v","Disconnect","Loader","inverted","stackable","marginBottom","closeIcon","trigger","circular","r","Container","Row","Icon","float","marginRight","cursor","panes","menuItem","render","Tab","Pane","attached","ProfileContent","menu","pointing","display","justifyContent","Profile","Divider","AllForm","handleClick","Responsive","minWidth","onlyTablet","backgroundColor","require","alt","onlyMobile","LoginForm","console","log","handleBlur","handleChange","FooterInscription","FooterLogin","href","ModalFooter","page","ModalContent","ModalAll","setPage","React","open","setOpen","pageName","close","onClose","onOpen","Topbar","visible","setVisible","disconnect","useRef","position","zIndex","Sidebar","Segment","vertical","animation","onHide","marginTop","margin","paddingTop","Pusher","marginLeft","Input","Menu","secondary","Item","link","ContentLayout","bottom","List","horizontal","divided","ProfilePage","ProtectedRoute","redirectPath","isAuthenticated","authenticationPath","component","to","pathname","Route","LoginPage","withRouter","param","match","active","top","Card","fontSize","MagicLinkPage","HomeCard","avatar","Meta","extra","slides","title","description","SliderComponent","Carousel","controls","map","slide","index","key","Home","Slider","HomePage","loadedState","getItem","loadState","App","context","defaultProtectedRouteProps","Provider","path","exact","LoginTextPage","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.09120c50.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/weigu-logo.246b4f4a.png\";","module.exports = __webpack_public_path__ + \"static/media/giphyz.74356439.gif\";","import { createBrowserHistory } from \"history\";\n\n\nexport const history = createBrowserHistory();","import * as Yup from \"yup\";\nimport { parse, isDate } from \"date-fns\";\n\nfunction parseDateString(value: any, originalValue: any) {\n  const parsedDate = isDate(originalValue)\n    ? originalValue\n    : parse(originalValue, \"yyyy-MM-dd\", new Date());\n\n  return parsedDate;\n}\nconst validEmail = Yup.string()\n  .email(\"Must be a valid email address\")\n  .max(255, \"Too long for an email\")\n  .required(\"Email is required\");\n\nconst validPassword = Yup.string()\n  .min(8, \"Password must have at least 8 caracters\")\n  .max(255, \"Too long password\")\n  .required(\"Password is required\");\n\nconst validConfirmationCode = Yup.number()\n  .test(\n    \"len\",\n    \"Confirmation code must be a 4 digits number\",\n    (t) => t && t.toString().length === 4\n  )\n  .positive(\"Confirmation code must be positive\")\n  .required(\"Confirmation code is required\");\n\nconst validUsername = Yup.string()\n  .min(3, \"Username must have more than 3 caracters\")\n  .max(50, \"Username must have less than 50 caracters\")\n  .required(\"Username is required\");\n\nconst validTerms = Yup.boolean().oneOf([true], \"Must Accept Terms of Service\");\n\nexport const loginValidationSchema = Yup.object().shape({\n  email: validEmail,\n  password: validPassword,\n});\n\nexport const EmailValidationSchema = Yup.object().shape({\n  email: validEmail,\n});\n\nexport const confirmationCodeFormSchema = Yup.object().shape({\n  confirmationCode: validConfirmationCode,\n});\nexport const resetPasswordSchema = Yup.object().shape({\n  password1: validPassword,\n  password: Yup.string().oneOf(\n    [Yup.ref(\"password1\"), null],\n    \"Passwords must match\"\n  ),\n});\nconst today = new Date();\nconst validDate = Yup.date().transform(parseDateString).max(today,\"La date de naissance doit être inférieure à celle d'aujourd'hui \").required(\"La date de naiassance est requis\");\nexport const registrationSchema = Yup.object().shape({\n  terms: validTerms,\n  username: validUsername,\n  email: validEmail,\n  password: validPassword,\n  birthday: validDate,\n});\n","const isDev = process.env.REACT_APP_ENV === \"development\";\nexport const API_URL = isDev\n  ? \"http://localhost:3010/\"\n  : \"http://localhost:3010/\";\n","import axios from \"axios\";\nimport { signUpInput } from \"../types/Registration\";\nimport { API_URL } from \"../utilities/config\";\nimport { editProfileType } from \"../components/Profile/ProfileEdit/Form\";\n\n\nconst instance = axios.create({\n  withCredentials: true,\n  baseURL: API_URL,\n});\nconst headersOptions: {} = {\n  headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n};\n// const headersOptionsUpload: {} = {\n//   headers: { \"Content-Type\": \"multipart/form-data\" },\n// };\n\ntype loginInput = {\n  email: string;\n  password: string;\n};\n\ntype emailType = {\n  email: string;\n};\n\n// const getStore = () => {\n//     const endPoint: string = `${API_URL}users/getStore.php`;\n//     return axios.get(\n//       endPoint,\n//       headersOptions\n//     );\n//   }\n\nconst login = (values: loginInput) => {\n  let params = new URLSearchParams();\n  params.append(\"email\", values.email);\n  params.append(\"password\", values.password);\n  return instance.post(\"users/signin\", params, headersOptions);\n};\n\nconst magicLink = (values: emailType) => {\n  let params = new URLSearchParams();\n  params.append(\"email\", values.email);\n  return instance.post(\"users/linkSignin\", params, headersOptions);\n};\nconst editProfile = (values: editProfileType) => {\n  let params = new URLSearchParams();\n  params.append(\"address\", values.address);\n  params.append(\"password\", values.password);\n  params.append(\"bio\", values.bio);\n  params.append(\"id\", values.id || \"\");\n  return instance.post(\"users/editProfile\", params, headersOptions);\n};\n\nconst magicLinkVerifiy = (token: string) => {\n  let params = new URLSearchParams();\n  params.append(\"token\", token);\n  return instance.post(\"users/linkVerify\", params, headersOptions);\n};\n\nconst signUp = (user: signUpInput) => {\n  let params = new URLSearchParams();\n  params.append(\"email\", user.email);\n  params.append(\"username\", user.username);\n  params.append(\"password\", user.password === undefined ? \"\" : user.password);\n  params.append(\"age\", user.age === undefined ? \"0\" : user.age.toString());\n  return instance.post(\"users/signup\", params);\n};\n\nconst passwordForgotten = (email: string, confirmationCoode: string = \"\") => {\n  let params = new URLSearchParams();\n  params.append(\"email\", email);\n  params.append(\"confirmationCode\", confirmationCoode);\n  return instance.post(\"users/passwordForgotten\", params, headersOptions);\n};\n\nconst profile = (id: string) => {\n  let params = new URLSearchParams();\n  params.append(\"userId\", id);\n  return instance.post(\"users/profile\", params, headersOptions);\n};\n\nconst resetPassword = (\n  email: string,\n  confirmationCoode: string,\n  password: string\n) => {\n  let params = new URLSearchParams();\n  params.append(\"email\", email);\n  params.append(\"confirmationCode\", confirmationCoode);\n  params.append(\"password\", password);\n\n  return instance.post(\"users/resetPassword\", params, headersOptions);\n};\n\nconst uloadImage = (formData: FormData) => {\n  return instance.post(\n    \"users/upload\",\n    formData \n  );\n};\nexport const userService = {\n  // getStore,\n  uloadImage,\n  editProfile,\n  magicLinkVerifiy,\n  magicLink,\n  profile,\n  login,\n  signUp,\n  passwordForgotten,\n  resetPassword,\n};\n","import { State, Action, StateImage } from \"./types\";\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"success\":\n      return { success: true, message: action.message };\n    case \"failure\":\n      return { success: false, error: action.error };\n    default:\n      return { ...state };\n  }\n};\nexport const reducerImage = (state: StateImage, action: Action): StateImage => {\n  switch (action.type) {\n    case \"preview\":\n      return {\n        success: false,\n        message: \"\",\n        loading: false,\n        preview: action.preview,\n        file: action.file,\n      };\n    case \"success\":\n      return { success: true, message: action.message, loading: false };\n    case \"failure\":\n      return { success: false, error: action.error, loading: false };\n    case \"request\":\n      return { success: false,  loading: true };\n    default:\n      return { ...state };\n  }\n};\n","import React, { useReducer } from \"react\";\nimport {\n  Card,\n  Form,\n  Button,\n  Message,\n  Checkbox,\n  Grid,\n  GridRow,\n  GridColumn,\n  Label,\n} from \"semantic-ui-react\";\nimport { Formik, Field, ErrorMessage } from \"formik\";\nimport { registrationSchema } from \"../../../utilities/validationSchema\";\nimport { Link } from \"react-router-dom\";\nimport { userService } from \"../../../services/users.service\";\nimport { reducer } from \"../../../utilities/reducers\";\nimport { formValues } from \"../../../utilities/types\";\n\nconst RegisterForm: React.FunctionComponent = () => {\n  const [{ success, message, error }, dispatch] = useReducer(reducer, {\n    success: false,\n    error: \"\",\n    message: \"\",\n  });\n\n  const Submit = async (\n    values: formValues,\n    {\n      setSubmitting,\n      resetForm,\n    }: { setSubmitting: Function; resetForm: Function }\n  ) => {\n    setSubmitting(true);\n    dispatch({ type: \"request\" });\n    try {\n      const input = {\n        email: values.email,\n        password: values.password,\n        username: values.username || \"\",\n      };\n      const result = await userService.signUp(input);\n      const data = { ...result.data };\n      if (data.success) {\n        dispatch({ type: \"success\", message: data.message });\n      } else {\n        dispatch({ type: \"failure\", error: data.error });\n      }\n    } catch (err) {\n      dispatch({ type: \"failure\", error: \"Something went wrong\" });\n    }\n    setSubmitting(false);\n    resetForm();\n  };\n  const initValues = {\n    email: \"\",\n    password: \"\",\n    username: \"\",\n    terms: false,\n    birthday:  \"\",\n    genre: true,\n  };\n  return (\n    <Formik\n      initialValues={initValues}\n      validationSchema={registrationSchema}\n      onSubmit={Submit}\n    >\n      {({\n        values,\n        handleSubmit,\n        isSubmitting,\n        errors,\n        touched,\n        setFieldValue,\n      }) => (\n        <Form onSubmit={handleSubmit}>\n          {success && message && (\n            <Message style={{textAlign: \"center\"}} positive>\n              <Message.Header>{message}</Message.Header>\n            </Message>\n          )}\n          {!success && error && (\n            <Message style={{textAlign: \"center\"}} negative>\n              <Message.Header>{error}</Message.Header>\n            </Message>\n          )}\n\n          <div style={{ padding: \"10px\" }}>\n            <Form.Field width=\"12\">\n              {errors.username && touched.username ? (\n                <div className=\"msg-error\">\n                  <ErrorMessage name=\"username\" />\n                </div>\n              ) : (\n                <label>Nom d'utilisateur</label>\n              )}\n              <Field\n                type=\"text\"\n                name=\"username\"\n                placeholder=\"Nom d'utilisateur\"\n              />\n            </Form.Field>\n            <Form.Field width=\"12\">\n              {errors.email && touched.email ? (\n                <div className=\"msg-error\">\n                  <ErrorMessage name=\"email\" />\n                </div>\n              ) : (\n                <label>Email</label>\n              )}\n\n              <Field type=\"email\" name=\"email\" placeholder=\"E-mail\" />\n            </Form.Field>\n            <Form.Field width=\"12\">\n              {errors.password && touched.password ? (\n                <div className=\"msg-error\">\n                  <ErrorMessage name=\"password\" />\n                </div>\n              ) : (\n                <label>Mot de passe</label>\n              )}\n\n              <Field\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Mot de passe\"\n              />\n            </Form.Field>\n            <Form.Field width=\"12\">\n              {errors.birthday && touched.birthday ? (\n                <div className=\"msg-error\">\n                  <ErrorMessage name=\"birthday\" />\n                </div>\n              ) : (\n                <label>Date de naissance</label>\n              )}\n\n              <Field\n                type=\"date\"\n                name=\"birthday\"\n                placeholder=\"Date de naissance\"\n              />\n            </Form.Field>\n            <Form.Field width=\"12\">\n              {errors.genre && touched.genre ? (\n                <div className=\"msg-error\">\n                  <ErrorMessage name=\"genre\" />\n                </div>\n              ) : (\n                <label>Genre</label>\n              )}\n              <Grid columns=\"equal\">\n                <GridRow>\n                  <GridColumn>\n                    <Checkbox\n                      radio\n                      label=\"Homme\"\n                      name=\"gender\"\n                      checked={values.genre}\n                      onClick={() => setFieldValue(\"genre\", true)}\n                    />\n                  </GridColumn>\n                  <GridColumn>\n                    <Checkbox\n                      radio\n                      label=\"Femme\"\n                      name=\"gender\"\n                      checked={!values.genre}\n                      onClick={() => setFieldValue(\"genre\", false)}\n                    />\n                  </GridColumn>\n                </GridRow>\n              </Grid>\n            </Form.Field>\n            <Form.Field width=\"12\">\n              {errors.terms && touched.terms && (\n                <div className=\"msg-error\">\n                  <ErrorMessage name=\"terms\" />\n                </div>\n              )}\n              <Checkbox\n                type=\"checkbox\"\n                label=\"J'ai lu et j'accepte les conditions générales d'utilisation.\"\n                name=\"terms\"\n                checked={values.terms}\n                onClick={() => setFieldValue(\"terms\", !values.terms)}\n              />\n            </Form.Field>\n            <br/>\n            <br/>\n            <Form.Field>\n              <Grid centered>\n                <Button\n                  fluid\n                  type=\"submit\"\n                  color=\"black\"\n                  {...(isSubmitting ? { loading: true } : {})}\n                >\n                  S'inscrire\n                </Button>\n              </Grid>\n            </Form.Field>\n          </div>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default RegisterForm;\n","import React, { ReactNode } from \"react\";\nimport { Grid, Header } from \"semantic-ui-react\";\n\ntype Props = {\n  children: ReactNode;\n};\n\nconst Layout: React.SFC<Props> = ({ children }) => (\n  <div>\n    <Grid textAlign=\"center\" style={{ height: \"100vh\" }} verticalAlign=\"middle\">\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\n          {/* <Image src='/logo.png' /> Log-in to your account */}\n        </Header>\n        {children}\n      </Grid.Column>\n    </Grid>\n  </div>\n);\n\nexport default Layout;\n","import React from \"react\";\nimport RegisterForm from '../components/Register/Form'\nimport Layout from \"./layouts/Layout\";\n// Rejoindre Weigu\n// Adresse e-mail\n// Mot de passe\n// Nom d'utilisateur\n// I J'ai lu et j'accepte les conditions générales d'utilisation.\n// Rejoindre\n// Déjà membre de Wattpad ? Se connecter\n// Mot de passe oublié ?\nconst RegisterPage = () => (\n  <Layout>\n    <RegisterForm />\n  </Layout>\n);\n\nexport default RegisterPage;\n","import React from \"react\";\nimport LoginMessageForm from '../../components/Login/Link/Message'\nimport Layout from \"../layouts/Layout\";\nimport { RouteComponentProps } from \"react-router-dom\";\n\nconst LoginPagePage: React.FunctionComponent<RouteComponentProps>  = () => (\n  <Layout>\n    {/* <LoginMessageForm /> */}\n  </Layout>\n);\n\nexport default LoginPagePage;\n","import { createContext, Dispatch, SetStateAction } from \"react\";\n\n// localStorage.js\nexport const loadState = (): Context => {\n  const serializedState = localStorage.getItem(\"Weigu-sate\");\n  if (serializedState !== null) {\n    return JSON.parse(serializedState);\n  } else return initialContext;\n};\n// localStorage.js\nexport const saveState = (state: Context) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(\"Weigu-sate\", serializedState);\n  } catch {}\n};\nexport interface AuthType {\n  isLogged: boolean;\n  user: {\n    id: string;\n    role: string;\n  };\n}\n\nexport const initialState: AuthType = {\n  isLogged: false,\n  user: {\n    id: \"\",\n    role: \"\",\n  },\n};\n\nexport type Context = {\n  contextState: AuthType;\n  setContext: Dispatch<SetStateAction<Context>>;\n};\n\nexport const initialContext: Context = {\n  contextState: initialState,\n  setContext: (): void => {\n    throw new Error(\"setContext function must be overridden\");\n  },\n};\nexport const Context = createContext<Context>(initialContext);\n","import React from \"react\";\nimport { Card, Form, Button, Message } from \"semantic-ui-react\";\nimport { Link, RouteComponentProps, withRouter } from \"react-router-dom\";\n\n// Connexion avec mot de passe\n\nconst LoginMessage: React.FunctionComponent<{email: string}> = (\n  props\n) => {\n  //const param: any = { ...props.match.params };\n  return (\n    <>\n      <p>Nous vous avons envoyé un lien magique ! </p>\n      <p>Nous avons envoyé un e-mail à {props.email}</p>\n      <p>Il contient un lien magique qui vous connectera à votre compte. </p>\n    </>\n  );\n};\n\nexport default LoginMessage;\n","import React, { useContext, useReducer, useState } from \"react\";\nimport { Card, Form, Button, Message, Grid } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { Formik, Field, ErrorMessage } from \"formik\";\nimport { EmailValidationSchema } from \"../../../utilities/validationSchema\";\nimport { Context } from \"../../../utilities/useAuth\";\nimport { history } from \"../../../utilities/history\";\nimport { reducer } from \"../../../utilities/reducers\";\nimport { userService } from \"../../../services/users.service\";\nimport LoginMessage from \"./Message\";\n\n// Connexion avec mot de passe\n\nconst LoginEmailForm: React.FunctionComponent = () => {\n  const { contextState } = useContext(Context);\n  const [sent, setSent] = useState(false);\n  if (contextState.isLogged) history.push(\"/profile\");\n  const [{ success, error, message }, dispatch] = useReducer(reducer, {\n    success: false,\n    error: \"\",\n    message: \"\",\n  });\n\n  const Submit = async (\n    values: { email: string },\n    {\n      setSubmitting,\n    }: { setSubmitting: Function; resetForm: Function }\n  ) => {\n    setSubmitting(true);\n    dispatch({ type: \"request\" });\n    await userService\n      .magicLink(values)\n      .then((dataa) => {\n        const data = { ...dataa.data };\n        if (data.success) {\n          //history push to profile\n          dispatch({ type: \"success\", message: \"Email Sent success\" });\n          //history.push(\"/login-link-text/\" + values.email);\n          setSent(true);\n        } else {\n          dispatch({ type: \"failure\", error: data.error });\n        }\n      })\n      .catch((err) => {\n        setSent(false);\n        dispatch({ type: \"failure\", error: \"Something went wrong\" });\n      });\n\n    setSubmitting(false);\n    //resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{ email: \"\" }}\n      validationSchema={EmailValidationSchema}\n      onSubmit={Submit}\n    >\n      {({ handleSubmit, isSubmitting, errors, touched, values }) => (\n        <Form onSubmit={handleSubmit}>\n          {success && message && (\n            <Message style={{ textAlign: \"center\" }} positive>\n              <Message.Header>{message}</Message.Header>\n            </Message>\n          )}\n          {!success && error && (\n            <Message style={{ textAlign: \"center\" }} negative>\n              <Message.Header>{error}</Message.Header>\n            </Message>\n          )}\n          {/* <Card.Meta>Joined in 2016</Card.Meta> */}\n\n          {!sent ? (\n            <>\n              <Form.Field width=\"12\">\n                {errors.email && touched.email ? (\n                  <div className=\"msg-error\">\n                    <ErrorMessage name=\"email\" />\n                  </div>\n                ) : (\n                  <label>Email</label>\n                )}\n\n                <Field type=\"email\" name=\"email\" placeholder=\"E-mail\" />\n              </Form.Field>\n              <br />\n              <br />\n              <Form.Field>\n                <Grid centered>\n                  <Button\n                    fluid\n                    type=\"submit\"\n                    color=\"black\"\n                    {...(isSubmitting ? { loading: true } : {})}\n                  >\n                    Connexion\n                  </Button>\n                </Grid>\n              </Form.Field>\n            </>\n          ) : (\n            <LoginMessage email={ values.email } />\n          )}\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default LoginEmailForm;\n","import React from \"react\";\nimport LoginEmailForm from '../../components/Login/Link/Email'\nimport Layout from \"../layouts/Layout\";\n\nconst LoginEmailPage: React.FunctionComponent = () => (\n  <Layout>\n    <LoginEmailForm />\n  </Layout>\n);\n\nexport default LoginEmailPage;\n","import React, { ChangeEvent, useState, useContext } from \"react\";\nimport { InputFile } from \"semantic-ui-react-input-file\";\nimport { Modal, Image, Button, Message } from \"semantic-ui-react\";\nimport { userService } from \"../../services/users.service\";\nimport { Context } from \"../../utilities/useAuth\";\n\nconst ImageInput: React.FunctionComponent<{ profileImage?: string | null,handleUpload: Function }> = ({\n  profileImage,\n  handleUpload\n}) => {\n  const { contextState } = useContext(Context);\n\n  const [preview, setPreview] = useState<null | string>(null);\n  const [loading, setLoading] = useState(false);\n  const [file, setFile] = useState<null | File>(null);\n  const [{ success, message, error }, setSuccess] = useState<{\n    success: boolean;\n    message: string | null;\n    error: string | null;\n  }>({\n    success: false,\n    message: \"\",\n    error: \"\",\n  });\n\n  const uploadImage = () => {\n    setLoading(true);\n    const formData = new FormData();\n    file && formData.append(\"image\", file);\n    formData.append(\"userId\", contextState.user.id);\n    formData.append(\"type\", \"profile\");\n\n    userService\n      .uloadImage(formData)\n      .then((res) => {\n        if (res.data.success) {\n            handleUpload(res.data.data.filename)\n          setSuccess({\n            success: true,\n            message: \"Image Uploaded\",\n            error: null,\n          });\n        } else {\n          setSuccess({\n            success: false,\n            message: null,\n            error: res.data.error,\n          });\n        }\n        setLoading(false);\n      })\n      .catch((err) => {\n        setSuccess({\n          success: false,\n          message: null,\n          error: \"Something went wrong\",\n        });\n        setLoading(false);\n      });\n  };\n  const handeImageChange = (event: ChangeEvent<HTMLInputElement>) => {\n    event.persist();\n    const pre = URL.createObjectURL(\n      event.target.files && event.target.files[0]\n    );\n    setFile(event.target.files?.[0] || null);\n    setPreview(pre);\n  };\n  return (\n    <Modal.Content image>\n      <Image\n        wrapped\n        size=\"medium\"\n        src={\n          preview\n            ? preview\n            : profileImage\n            ? profileImage\n            : \"http://localhost:3010/users/matthew-7e89.png\"\n        }\n        centered\n      />\n      <Modal.Description>\n        <br />\n        <br />\n        <InputFile\n          input={{\n            id: \"input-control-id\",\n            onChange: (e) => handeImageChange(e),\n          }}\n        />\n        <br />\n        <br />\n        <Button\n          disabled={preview === null}\n          onClick={() => uploadImage()}\n          positive\n          labelPosition=\"right\"\n          icon=\"checkmark\"\n          content=\"Upload\"\n          {...(loading && { loading: true })}\n        />\n        <br />\n        {success && message && (\n          <Message style={{textAlign: \"center\"}} positive>\n            <Message.Header>{message}</Message.Header>\n          </Message>\n        )}\n        {!success && error && (\n          <Message style={{textAlign: \"center\"}} negative>\n            <Message.Header>{error}</Message.Header>\n          </Message>\n        )}\n      </Modal.Description>\n    </Modal.Content>\n  );\n};\n\nexport default ImageInput;\n","import React, { ChangeEvent, useState, useContext } from \"react\";\nimport { InputFile } from \"semantic-ui-react-input-file\";\nimport { Modal, Image, Button, Message } from \"semantic-ui-react\";\nimport { userService } from \"../../services/users.service\";\nimport { Context } from \"../../utilities/useAuth\";\nimport { history } from \"../../utilities/history\";\n\nconst CoverImageInput: React.FunctionComponent<{ coverImage: string | null,handleUpload: Function }> = ({\n    coverImage,\n    handleUpload\n}) => {\n  const { contextState } = useContext(Context);\n\n  const [preview, setPreview] = useState<null | string>(null);\n  const [loading, setLoading] = useState(false);\n  const [file, setFile] = useState<null | File>(null);\n  const [{ success, message, error }, setSuccess] = useState<{\n    success: boolean;\n    message: string | null;\n    error: string | null;\n  }>({\n    success: false,\n    message: \"\",\n    error: \"\",\n  });\n\n  const uploadImage = () => {\n    setLoading(true);\n    const formData = new FormData();\n    file && formData.append(\"image\", file);\n    formData.append(\"userId\", contextState.user.id);\n    formData.append(\"type\", \"cover\");\n\n    userService\n      .uloadImage(formData)\n      .then((res) => {\n        if (res.data.success) {\n            handleUpload(res.data.data.filename);\n          setSuccess({\n            success: true,\n            message: \"Image Uploaded\",\n            error: null,\n          });\n        } else {\n          setSuccess({\n            success: false,\n            message: null,\n            error: res.data.error,\n          });\n        }\n        //\n        history.push(\"/profile\")\n        setLoading(false);\n      })\n      .catch((err) => {\n        setSuccess({\n          success: false,\n          message: null,\n          error: \"Something went wrong\",\n        });\n        setLoading(false);\n      });\n  };\n  const handeImageChange = (event: ChangeEvent<HTMLInputElement>) => {\n    event.persist();\n    const pre = URL.createObjectURL(\n      event.target.files && event.target.files[0]\n    );\n    setFile(event.target.files?.[0] || null);\n    setPreview(pre);\n  };\n  return (\n    <Modal.Content image>\n      <Image\n        wrapped\n        size=\"large\"\n        src={\n          preview\n            ? preview\n            : coverImage\n            ? coverImage\n            : \"./images/cover.png\"\n        }\n        centered\n      />\n      <Modal.Description>\n        <br />\n        <br />\n        <InputFile\n          input={{\n            id: \"input-control-id\",\n            onChange: (e) => handeImageChange(e),\n          }}\n        />\n        <br />\n        <br />\n        <Button\n          disabled={preview === null}\n          onClick={() => uploadImage()}\n          positive\n          labelPosition=\"right\"\n          icon=\"checkmark\"\n          content=\"Upload\"\n          {...(loading && { loading: true })}\n        />\n        <br />\n        {success && message && (\n          <Message style={{textAlign: \"center\"}} positive>\n            <Message.Header>{message}</Message.Header>\n          </Message>\n        )}\n        {!success && error && (\n          <Message style={{textAlign: \"center\"}} negative>\n            <Message.Header>{error}</Message.Header>\n          </Message>\n        )}\n      </Modal.Description>\n    </Modal.Content>\n  );\n};\n\nexport default CoverImageInput;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport {\n  Container,\n  Image,\n  Grid,\n  Icon,\n  Modal,\n  Label,\n  Loader,\n  GridRow,\n} from \"semantic-ui-react\";\nimport ProfileEditForm from \"../ProfileEdit/Form\";\nimport { API_URL } from \"../../../utilities/config\";\nimport ImageInput from \"../../Shared/ImageInput\";\nimport CoverImageInput from \"../../Shared/CoverImageInput\";\nimport { Context } from \"../../../utilities/useAuth\";\nimport { history } from \"../../../utilities/history\";\nimport { userService } from \"../../../services/users.service\";\n\nexport interface userState {\n  ProfileImage: string;\n  address: string;\n  bio: string;\n  coverImage: string;\n  email: string;\n  profileImage: string;\n  username: string;\n  _id: string;\n}\nconst ProfileHeader: React.FunctionComponent = () => {\n  const initalState = {\n    ProfileImage: \"\",\n    address: \"\",\n    bio: \"\",\n    coverImage: \"\",\n    email: \"\",\n    profileImage: \"\",\n    username: \"\",\n    _id: \"\",\n  };\n  const [authUser, setAuthUser] = useState<userState>(initalState);\n  const [loading, setLoading] = useState(false);\n  const [uploaded, setUploaded] = useState<string | null>(null);\n  const [uploadedProfile, setUploadedProfile] = useState<string | null>(null);\n  const { contextState, setContext } = useContext(Context);\n\n  const Disconnect = () => {\n    const v = {\n      contextState: {\n        isLogged: false,\n        user: {\n          id: \"\",\n          role: \"\",\n        },\n      },\n      setContext,\n    };\n    setContext(v);\n    useState(v);\n    history.push(\"/\");\n  };\n  if (!contextState.isLogged) history.push(\"/\");\n  useEffect(() => {\n    setLoading(true);\n    userService\n      .profile(contextState.user.id)\n      .then((res) => {\n        if (res.data.success) setAuthUser(res.data.data);\n        setLoading(false);\n        //handle errors\n      })\n      .catch((err) => {\n        err.response.data.statusCode === 401 && Disconnect();\n        setLoading(false);\n      });\n  }, []);\n\n  // const userHandlre = \"@\" + data.username;\n  // const userBio = \"Bio : \" + data.bio;\n  // const userAddress = data.address;\n  // const cover = data.coverImage\n  //   ? API_URL + \"users/\" + data.coverImage\n  //   : \"./images/cover.png\";\n  return (\n    <div className=\"\">\n      {loading ? (\n        <Loader inverted />\n      ) : (\n        <div\n          className=\"profile-header-cover\"\n          // style={{\n          //   backgroundImage: `url('${\n          //     uploaded\n          //       ? API_URL + \"users/\" + uploaded\n          //       : authUser.coverImage\n          //       ? API_URL + \"users/\" + authUser.coverImage\n          //       : \"http://localhost:3010/users/default-cover.png\"\n          //   }')`,\n          // }}\n        >\n          <Grid columns={3} stackable>\n            <GridRow style={{marginBottom: '20px'}}>\n              <Grid.Column>\n                <Modal\n                  closeIcon\n                  size={\"fullscreen\"}\n                  // trigger={\n                  //   <Label as=\"a\">\n                  //     <Icon name=\"photo\" />\n                  //   </Label>\n                  // }\n                >\n                  <Modal.Header>\n                    Selectioner une photo de couverture\n                  </Modal.Header>\n\n                  <CoverImageInput\n                    handleUpload={(t: string) => setUploaded(t)}\n                    coverImage={\n                      uploaded\n                        ? API_URL + \"users/\" + uploaded\n                        : authUser.coverImage\n                        ? API_URL + \"users/\" + authUser.coverImage\n                        : \"http://localhost:3010/users/default-cover.png\"\n                    }\n                  />\n                </Modal>\n              </Grid.Column>\n              <Grid.Column>\n                <Modal\n                  size={\"tiny\"}\n                  trigger={\n                    <Image\n                      className=\"profile-photo\"\n                      src={\n                        uploadedProfile\n                          ? API_URL + \"users/\" + uploadedProfile\n                          : authUser.profileImage\n                          ? API_URL + \"users/\" + authUser.profileImage\n                          : \"http://localhost:3010/users/default-profile.png\"\n                      }\n                      size=\"tiny\"\n                      circular\n                      centered\n                    />\n                  }\n                >\n                  <Modal.Header>Selectioner une photo de profil</Modal.Header>\n\n                  <ImageInput\n                    handleUpload={(r: string) => setUploadedProfile(r)}\n                    profileImage={\n                      authUser.profileImage\n                        ? API_URL + \"users/\" + authUser.profileImage\n                        : \"http://localhost:3010/users/default-profile.png\"\n                    }\n                  />\n                </Modal>\n                <Container>\n                  <Grid>\n                    <Grid.Row centered>\n                      <div>\n                        <span className=\"profile-btn-controls-items\">\n                          {authUser.username}\n                        </span>\n                        <br />\n                        <span className=\"profile-btn-controls-items\" style={{color: 'grey'}}>\n                          <Icon name=\"map marker alternate\" />\n                          {authUser.address\n                            ? authUser.address\n                            : \"Votre Adresse n'est pas encore défini\"}\n                        </span>\n                      </div>\n                    </Grid.Row>\n                  </Grid>\n                </Container>\n              </Grid.Column>\n              {/* <Grid.Column>\n              <Container>\n                <Grid>\n                  <Grid.Row centered>\n                    <div className=\"profile-btn-controls-btns\">\n                      <Modal\n                      //   trigger={\n                      //     // <Icon name=\"ellipsis horizontal\" >\n                      //     // <span\n\n                      //     //   className=\"profile-btn-controls-items\"\n                      //     //   style={{ cursor: \"pointer\" }}\n                      //     // >\n                      //     //   Edit Profile\n                      //     // </span>\n                      //   }\n                      //\n                      >\n                        <Modal.Header>Editer le profil</Modal.Header>\n                        <Modal.Content>\n                          <Modal.Description>\n                            <ProfileEditForm\n                              profileState={authUser}\n                              handleProfileEdit={(d: userState) =>\n                                setAuthUser(d)\n                              }\n                            />\n                          </Modal.Description>\n                        </Modal.Content>\n                      </Modal>\n\n                      <br />\n                      <br />\n                      <span\n                        className=\"profile-btn-controls-items\"\n                        style={{ cursor: \"pointer\" }}\n                      >\n                        <Icon name=\"share\" color=\"grey\" />\n                        {\"share\"}\n                      </span>\n                    </div>\n                  </Grid.Row>\n                </Grid>\n              </Container>\n            </Grid.Column> */}\n              <Grid.Column>\n                <Icon\n                  name=\"ellipsis horizontal\"\n                  size=\"mini\"\n                  style={{ float: \"right\", marginRight: \"10px\" }}\n                />\n                <br />\n                <br />\n                <span\n                  className=\"profile-btn-controls-items\"\n                  style={{\n                    cursor: \"pointer\",\n                    float: \"right\",\n                    marginRight: \"10px\",\n                  }}\n                >\n                  <Icon name=\"share\" color=\"grey\" />\n                </span>\n              </Grid.Column>\n            </GridRow>\n            <GridRow centered>\n              <span className=\"profile-btn-controls-items\" style={{color: 'grey'}}> \n                {authUser.bio\n                  ? \"Bio : \" + authUser.bio\n                  : \"Votre bio n'est pas encore défini\"}\n              </span>\n            </GridRow>\n          </Grid>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProfileHeader;\n","import React from \"react\";\nimport { Tab } from \"semantic-ui-react\";\n\nconst panes = [\n  {\n    menuItem: \"Tab 1\",\n    render: () => <Tab.Pane attached={false}>Tab 1 Content</Tab.Pane>,\n  },\n  {\n    menuItem: \"Tab 2\",\n    render: () => <Tab.Pane attached={false}>Tab 2 Content</Tab.Pane>,\n  },\n  {\n    menuItem: \"Tab 3\",\n    render: () => <Tab.Pane attached={false}>Tab 3 Content</Tab.Pane>,\n  },\n];\n\nconst ProfileContent: React.FunctionComponent = () => {\n  return (\n    <>\n      <Tab menu={{\n        pointing: true,\n       \n        style: {\n          display: \"flex\",\n          justifyContent: \"center\"\n        }\n      }} panes={panes}  />\n    </>\n  );\n};\n\nexport default ProfileContent;\n","import React from \"react\";\nimport {  Divider } from \"semantic-ui-react\";\nimport ProfileHeader from \"./ProfileHeader\";\nimport ProfileContent from \"./ProfileContent\";\n\nconst Profile: React.FunctionComponent = () => {\n\n  return (\n    <div>\n      <ProfileHeader />\n      <Divider />\n      <ProfileContent />\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { Button, Form, Image, Icon, Responsive } from \"semantic-ui-react\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst AllForm: React.FunctionComponent<{\n  handleClick: Function;\n  type: string;\n}> = ({ handleClick, type }) => {\n  return (\n    <Form>\n      <Responsive minWidth={Responsive.onlyTablet.minWidth}>\n        <Form.Field>\n          <Button\n            type=\"button\"\n            className=\"signUp\"\n            style={{ color: \"white\", backgroundColor: \"#3b5998\" }}\n          >\n            <Icon name=\"facebook\" size=\"large\" />\n            {type !== \"register\" ? \"Se connecter \" : \"S'inscrire\"} avec Facebook\n          </Button>\n        </Form.Field>\n        <Form.Field>\n          <Button\n            type=\"button\"\n            className=\"signUp\"\n            style={{ color: \"white\", backgroundColor: \"#db4437\"}}\n          >\n            <Icon name=\"google\" size=\"large\" />\n            {type !== \"register\" ? \"Se connecter \" : \"S'inscrire\"} avec Google\n          </Button>\n        </Form.Field>\n        <Form.Field>\n          <p className=\"dataField\">Ou</p>\n        </Form.Field>\n        <Form.Field>\n          <Button\n            type=\"button\"\n            className=\"signUp\"\n            style={{ color: \"white\", backgroundColor: \"#444\" }}\n            onClick={() =>\n              handleClick(type !== \"register\" ? \"login\" : \"register\")\n            }\n          >\n            {type !== \"register\" ? \"Se connecter \" : \"S'inscrire\"} avec un\n            e-mail\n          </Button>\n        </Form.Field>\n        {type !== \"register\" && (\n          <Form.Field>\n            <Button\n              style={{ color: \"white\", backgroundColor: \"#0c6c50\" }}\n              type=\"button\"\n              className=\"signUp\"\n              onClick={() => handleClick(\"magiclink\")}\n            >\n              Se connecter avec un lien magic\n              <Image\n                src={require(\"../../../assets/giphyz.gif\")}\n                alt=\"gif\"\n                className=\"magic\"\n              />\n            </Button>\n          </Form.Field>\n        )}\n      </Responsive>\n      <Responsive {...Responsive.onlyMobile}>\n        <Form.Field width=\"12\">\n          <Button\n            type=\"button\"\n            className=\"signUp\"\n            style={{ color: \"white\", backgroundColor: \"#3b5998\" }}\n          >\n            <Icon name=\"facebook\" size=\"large\" />\n            {type !== \"register\" ? \"Se connecter \" : \"S'inscrire\"} avec Facebook\n          </Button>\n        </Form.Field>\n        <Form.Field width=\"12\">\n          <Button\n            type=\"button\"\n            className=\"signUp\"\n            style={{ color: \"white\", backgroundColor: \"#db4437\" }}\n          >\n            <Icon name=\"google\" size=\"large\" />\n            {type !== \"register\" ? \"Se connecter \" : \"S'inscrire\"} avec Google\n          </Button>\n        </Form.Field>\n        <Form.Field>\n          <p className=\"dataField\">Ou</p>\n        </Form.Field>\n        <Form.Field width=\"12\">\n          <Button\n            type=\"button\"\n            className=\"signUp\"\n            style={{ color: \"white\", backgroundColor: \"#444\" }}\n            onClick={() =>\n              handleClick(type !== \"register\" ? \"login\" : \"register\")\n            }\n          >\n            {type !== \"register\" ? \"Se connecter \" : \"S'inscrire\"} avec un\n            e-mail\n          </Button>\n        </Form.Field>\n        {type !== \"register\" && (\n          <Form.Field width=\"12\">\n            <Button\n              type=\"button\"\n              className=\"signUp\"\n              style={{ color: \"white\", backgroundColor: \"#0c6c50\" }}\n              onClick={() => handleClick(\"magiclink\")}\n            >\n              Se connecter avec un lien magic\n              <Image\n                src={require(\"../../../assets/giphyz.gif\")}\n                alt=\"gif\"\n                className=\"magicM\"\n              />\n            </Button>\n          </Form.Field>\n        )}\n      </Responsive>\n    </Form>\n  );\n};\n\nexport default AllForm;\n","import React, { useReducer, useContext } from \"react\";\nimport { Card, Form, Button, Message, Grid } from \"semantic-ui-react\";\nimport { Formik, ErrorMessage, Field } from \"formik\";\nimport { loginValidationSchema } from \"../../../utilities/validationSchema\";\nimport { Link } from \"react-router-dom\";\nimport { reducer } from \"../../../utilities/reducers\";\nimport { userService } from \"../../../services/users.service\";\nimport { history } from \"../../../utilities/history\";\nimport { Context, saveState } from \"../../../utilities/useAuth\";\n\nconst LoginForm: React.SFC = () => {\n  console.log(\"RENDERED LOGIN PAGE\")\n  const { contextState, setContext } = useContext(Context);\n  if (contextState.isLogged) history.push(\"profile\");\n  const [{ success, error }, dispatch] = useReducer(reducer, {\n    success: false,\n    error: \"\",\n    message: \"\",\n  });\n  const Submit = async (\n    values: { email: string; password: string },\n    {\n      setSubmitting,\n      resetForm,\n    }: { setSubmitting: Function; resetForm: Function }\n  ) => {\n    setSubmitting(true);\n    dispatch({ type: \"request\" });\n    //try {\n    await userService\n      .login(values)\n      .then((dataa) => {\n        const data = { ...dataa.data };\n        if (data.success) {\n          //history push to profile\n          const { user } = data.data;\n          const v = {\n            contextState: {\n              isLogged: data.success,\n              user: {\n                id: user._id,\n                role: \"admin\",\n              },\n            },\n            setContext,\n          };\n          setContext(v);\n          saveState(v);\n          dispatch({ type: \"success\", message: \"Login success\" });\n          history.push(\"/profile\");\n        } else {\n          dispatch({ type: \"failure\", error: data.error });\n        }\n\n        resetForm();\n      })\n      .catch((err) => {\n        dispatch({ type: \"failure\", error: \"Something went wrong\" });\n      });\n\n    setSubmitting(false);\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{ email: \"\", password: \"\" }}\n      validationSchema={loginValidationSchema}\n      onSubmit={Submit}\n    >\n      {({\n        values,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        errors,\n        touched,\n      }) => (\n        <Form onSubmit={handleSubmit}>\n          {!success && error && (\n            <Message style={{ textAlign: \"center\" }} negative>\n              <Message.Header>{error}</Message.Header>\n            </Message>\n          )}\n\n          <Form.Field width=\"12\">\n            {errors.email && touched.email ? (\n              <div className=\"msg-error\">\n                <ErrorMessage name=\"email\" />\n              </div>\n            ) : (\n              <label>Email</label>\n            )}\n\n            <Field type=\"email\" name=\"email\" placeholder=\"E-mail\" />\n          </Form.Field>\n          <Form.Field width=\"12\">\n            {errors.password && touched.password ? (\n              <div className=\"msg-error\">\n                <ErrorMessage name=\"password\" />\n              </div>\n            ) : (\n              <label>Mot de passe</label>\n            )}\n\n            <Field type=\"password\" name=\"password\" placeholder=\"Mot de passe\" />\n          </Form.Field>\n          <br />\n          <br />\n          <Form.Field>\n            <Grid centered>\n              <Button\n                fluid\n                type=\"submit\"\n                color=\"black\"\n                {...(isSubmitting ? { loading: true } : {})}\n              >\n                Connexion\n              </Button>\n            </Grid>\n          </Form.Field>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default LoginForm;\n","import React, { useState } from \"react\";\nimport { Image, Modal, Icon } from \"semantic-ui-react\";\nimport AllForm from \"../Allconnection\";\nimport LoginForm from \"../../Login/Form\";\nimport RegisterForm from \"../../Register/Form\";\nimport LoginEmailForm from \"../../Login/Link/Email\";\n\ntype modalProps = {\n  trigger?: any;\n  page: string;\n};\n\nconst FooterInscription: React.FunctionComponent<{ handleClick: Function }> = ({\n  handleClick,\n}) => (\n  <div className=\"footerModal\">\n    <p className=\"headfooter\">\n      <a className=\"pointer spe\" onClick={() => handleClick(\"pwdForgotten\")}>\n        Mot de passe oublié ?\n      </a>\n    </p>\n    <p className=\"secheadfooter\">\n      Pas encore inscrit ?{\" \"}\n      <a className=\"pointer\" onClick={() => handleClick(\"register\")}>\n        Je m'inscris\n      </a>\n    </p>\n  </div>\n);\nconst FooterLogin: React.FunctionComponent<{ handleClick: Function }> = ({\n  handleClick,\n}) => (\n  <div className=\"footerModal\">\n    <p className=\"headfooter\">\n      Déja inscrit?{\" \"}\n      <a className=\"pointer\" onClick={() => handleClick(\"login\")}>\n        Je me connecte\n      </a>\n    </p>\n    <p className=\"secheadfooter\">\n      En vous inscrivant, vous indiquez que vous acceptez les{\" \"}\n      <a href=\"#\">Conditions d'utilisation</a> et la{\" \"}\n      <a href=\"#\">Politique de confidentialité</a> de Weigu.\n    </p>\n  </div>\n);\nconst ModalFooter: React.FunctionComponent<{\n  page: string;\n  handleClick: Function;\n}> = ({ page, handleClick }) => {\n  switch (page) {\n    case \"register\":\n      return <FooterLogin handleClick={handleClick} />;\n    default:\n      return <FooterInscription handleClick={handleClick} />;\n  }\n};\n\nconst ModalContent: React.FunctionComponent<{\n  page: string;\n  handleClick: Function;\n}> = ({ page, handleClick }) => {\n  console.log(\"CHOOSEN\", page);\n  switch (page) {\n    case \"login\":\n      return <LoginForm />;\n    case \"register\":\n      return <RegisterForm />;\n    case \"magiclink\":\n      return <LoginEmailForm />;\n    case \"allRegister\":\n      return <AllForm type=\"register\" handleClick={handleClick} />;\n    default:\n      return <AllForm type=\"login\" handleClick={handleClick} />;\n  }\n};\n\nconst ModalAll: React.FunctionComponent<modalProps> = (props) => {\n  const [page, setPage] = useState(props.page);\n  const [open, setOpen] = React.useState(false);\n  const handleClick = (pageName: string) => {\n    setPage(pageName);\n  };\n  console.log(\"page\");\n  console.log(page);\n  const close = () => {\n    setPage(\n      page !== \"login\" && page !== \"magiclink\" ? \"allRegister\" : \"allLogin\"\n    );\n    setOpen(false);\n  };\n  return (\n    <Modal\n      className=\"tiny\"\n      trigger={props.trigger}\n      onClose={() => {\n        close();\n      }}\n      open={open}\n      onOpen={() => setOpen(true)}\n    >\n      <Modal.Header>\n        <span\n          style={{ float: \"right\", cursor: \"pointer\" }}\n          onClick={() => close()}\n        >\n          X\n        </span>\n        {page !== \"allRegister\" && page !== \"allLogin\" && (\n          <span\n            style={{ float: \"left\", cursor: \"pointer\" }}\n            onClick={() =>\n              setPage(\n                page !== \"login\" && page !== \"magiclink\"\n                  ? \"allRegister\"\n                  : \"allLogin\"\n              )\n            }\n          >\n            <Icon name=\"angle left\" />\n          </span>\n        )}\n        <Image src={require(\"../../../assets/weigu-logo.png\")} size=\"tiny\" />\n        <div className=\"headerText\">\n          Lorem ipsum dolor sit amet, consectetur adipiscing.\n        </div>\n      </Modal.Header>\n      <Modal.Content>\n        <Modal.Description>\n          <ModalContent page={page} handleClick={handleClick} />\n        </Modal.Description>\n      </Modal.Content>\n      <ModalFooter page={page} handleClick={handleClick} />\n    </Modal>\n  );\n};\n\nexport default ModalAll;\n","import React, { useState, useContext } from \"react\";\nimport {\n  Icon,\n  Menu,\n  Input,\n  Sidebar,\n  Ref,\n  Segment,\n  Image,\n  Responsive,\n  Container,\n  Grid,\n  GridRow,\n  GridColumn,\n  Divider,\n} from \"semantic-ui-react\";\nimport { Context, saveState } from \"../../utilities/useAuth\";\nimport { history } from \"../../utilities/history\";\nimport ModalAll from \"../Home/modalAll\";\n\nconst Topbar: React.FunctionComponent = (props) => {\n  const { contextState, setContext } = useContext(Context);\n  const [activeItem, setActiveItem] = useState(1);\n  const [visible, setVisible] = useState(false);\n  const segmentRef = React.useRef();\n\n  const disconnect = () => {\n    const v = {\n      contextState: {\n        isLogged: false,\n        user: {\n          id: \"\",\n          role: \"\",\n        },\n      },\n      setContext,\n    };\n    setContext(v);\n    saveState(v);\n    history.push(\"/\");\n  };\n  // hide side bar\n  return (\n    <div style={{ position: \"fixed\", width: \"100%\", zIndex: 1 }}>\n      <Sidebar\n        as={Segment}\n        vertical\n        animation=\"overlay\"\n        icon=\"labeled\"\n        onHide={() => setVisible(false)}\n        visible={visible}\n        width=\"wide\"\n        style={{ backgroundColor: \"#fff\" }}\n      >\n        <Image\n          src={require(\"../../assets/weigu-logo.png\")}\n          size=\"tiny\"\n          style={{ marginTop: \"20px\" }}\n          centered\n        />\n        <br />\n        <br />\n        <br />\n        <div className=\"sidebarMenu\">\n          <div className=\"sidebarMenuItem\">\n            <a> <Icon name=\"plus square outline\" /> Deposer une publication</a>\n          </div>\n          <div className=\"sidebarMenuItem\">\n            <a> <Icon name=\"search\" />Rechercher</a>\n          </div>\n        </div>\n        <Divider />\n        <div className=\"sidebarMenu\">\n          <div className=\"sidebarMenuItem\">\n            <a>Link </a>\n          </div>\n          <div className=\"sidebarMenuItem\">\n            <a>Annother link</a>\n          </div>\n        </div>\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n\n        <Divider />\n        <div className=\"sidebarMenu\">\n          <div className=\"sidebarMenuItem\">\n            <a className=\"redlocation\">C'est quoi Weigu ?</a>\n          </div>\n          {!contextState.isLogged ? (\n            <>\n              <div className=\"sidebarMenuItem\">\n                <ModalAll\n                  page=\"allLogin\"\n                  trigger={\n                    <a href=\"#\" className=\"link item \">\n                      Connecter\n                    </a>\n                  }\n                />\n              </div>\n              <div className=\"sidebarMenuItem\">\n                <ModalAll\n                  page=\"allRegister\"\n                  trigger={\n                    <a href=\"#\" className=\"link item \">\n                      Inscription\n                    </a>\n                  }\n                />\n              </div>\n            </>\n          ) : (\n            <>\n              <div className=\"sidebarMenuItem\">\n                <a onClick={() => disconnect()} className=\"link item ins\">\n                  Deconnexion\n                </a>\n              </div>\n            </>\n          )}\n        </div>\n      </Sidebar>\n      <Responsive\n        as={Segment}\n        {...Responsive.onlyMobile}\n        style={{ margin: 0, height: \"70px\", paddingTop: \"8px\" }}\n        size={\"mini\"}\n      >\n        <Sidebar.Pusher>\n          <Grid>\n            <GridRow\n              textAlign=\"center\"\n              columns=\"equal\"\n              style={{ marginLeft: \"10px\", marginRight: \"10px\" }}\n            >\n              <Image src={require(\"../../assets/weigu-logo.png\")} size=\"tiny\" />\n              <GridColumn verticalAlign=\"middle\" width={10}>\n                <Input icon=\"search\" fluid placeholder=\"Search...\" />\n              </GridColumn>\n              <GridColumn verticalAlign=\"middle\">\n                <Icon\n                  size=\"big\"\n                  name=\"bars\"\n                  onClick={() => setVisible(visible ? false : true)}\n                />\n              </GridColumn>\n            </GridRow>\n          </Grid>\n        </Sidebar.Pusher>\n      </Responsive>\n      <Responsive\n        as={Segment}\n        minWidth={Responsive.onlyTablet.minWidth}\n        style={{ margin: 0 }}\n      >\n        <Menu stackable pointing secondary size=\"small\">\n          <Menu.Item>\n            <Image src={require(\"../../assets/weigu-logo.png\")} size=\"tiny\" />\n          </Menu.Item>\n          <Menu.Item>\n            <Input icon=\"search\" placeholder=\"Search...\" />\n          </Menu.Item>\n          <Menu.Menu position=\"right\">\n            <Menu.Item\n              link\n              as=\"a\"\n              content=\"C'est quoi Weigu ?\"\n              className=\"redlocation\"\n            ></Menu.Item>\n            {!contextState.isLogged ? (\n              <>\n                <ModalAll\n                  page=\"allLogin\"\n                  trigger={\n                    <a href=\"#\" className=\"link item con\">\n                      Connecter\n                    </a>\n                  }\n                />\n                <ModalAll\n                  page=\"allRegister\"\n                  trigger={\n                    <a href=\"#\" className=\"link item ins\">\n                      Inscription\n                    </a>\n                  }\n                />\n              </>\n            ) : (\n              <a onClick={() => disconnect()} className=\"link item ins\">\n                Deconnexion\n              </a>\n            )}\n          </Menu.Menu>\n        </Menu>\n      </Responsive>\n    </div>\n  );\n};\n\nexport default Topbar;\n","import React, { ReactNode, useContext } from \"react\";\nimport Topbar from \"../../components/Shared/Topbar\";\nimport { Segment, Container, List } from \"semantic-ui-react\";\nimport { Context } from \"../../utilities/useAuth\";\n\ntype Props = {\n  children: ReactNode;\n};\n\nconst ContentLayout: React.SFC<Props> = ({ children }) => {\n  const { contextState, setContext } = useContext(Context);\n  console.log(contextState);\n  return (\n    <div className=\"content-page\">\n      <div className=\"content\">\n        <div className=\"content-fluid\">\n          {!contextState.isLogged && <div className=\"contenu\"></div>}\n          <Topbar />\n          <div style={{paddingTop: \"80px\"}}>{children}</div>\n        </div>\n        <Segment\n          vertical\n          style={{\n            margin: \"1em 0em 0em 0em\",\n            padding: \"1em 0em\",\n            color: \"black\",\n            backgroundColor: \"white\",\n          }}\n        >\n          <Container textAlign=\"center\" style={{bottom: 0}}>\n            <List horizontal divided link size=\"small\">\n              <List.Item as=\"a\" href=\"#\">\n                Site Map\n              </List.Item>\n              <List.Item as=\"a\" href=\"#\">\n                Contact Us\n              </List.Item>\n              <List.Item as=\"a\" href=\"#\">\n                Terms and Conditions\n              </List.Item>\n              <List.Item as=\"a\" href=\"#\">\n                Privacy Policy\n              </List.Item>\n            </List>\n          </Container>\n        </Segment>\n      </div>\n    </div>\n  );\n};\n\nexport default ContentLayout;\n","\nimport React from \"react\";\nimport Profile from '../components/Profile';\nimport ContentLayout from \"./layouts/ContentLayout\";\n\nconst ProfilePage: React.FunctionComponent = () => (\n  <ContentLayout>\n    <Profile />\n  </ContentLayout>\n);\n\nexport default ProfilePage;\n","import * as React from 'react';\nimport {Redirect, Route, RouteProps} from 'react-router';\n\nexport interface ProtectedRouteProps extends RouteProps {\n    isAuthenticated: boolean;\n    authenticationPath: string;\n}\n\n class ProtectedRoute extends Route<ProtectedRouteProps> {\n     \n     render = () => {\n        let redirectPath: string = '';\n        if (!this.props.isAuthenticated) {\n            redirectPath = this.props.authenticationPath;\n        }\n\n        if (redirectPath) {\n            return <Route {...this.props} component={() => (<Redirect to={{pathname: redirectPath}}/>)}  render={undefined}/>;\n        } else {\n            return <Route {...this.props}/>;\n        }\n    }\n}\n\nexport default ProtectedRoute;","// Connexion à Weigu\n// E-mail\n// Mot de passe\n// Connexion\n// Mot de passe oublié ?\nimport React from \"react\";\nimport LoginForm from \"../components/Login/Form\";\nimport Layout from \"./layouts/Layout\";\n\nconst LoginPage: React.FunctionComponent = () => (\n  <Layout>\n    <LoginForm />\n  </Layout>\n);\n\nexport default LoginPage;\n","import React, { useEffect, useContext, useReducer, useState } from \"react\";\nimport { Card, Loader, Message } from \"semantic-ui-react\";\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\nimport { userService } from \"../../../services/users.service\";\nimport { history } from \"../../../utilities/history\";\nimport { Context, saveState } from \"../../../utilities/useAuth\";\nimport { reducer } from \"../../../utilities/reducers\";\n\n// Connexion avec mot de passe\n\nconst LinkVerify: React.FunctionComponent<RouteComponentProps> = (props) => {\n  const { contextState, setContext } = useContext(Context);\n  if (contextState.isLogged) history.push(\"/profile\");\n  const [loading, setLoading] = useState(false);\n  const [{ success, error }, dispatch] = useReducer(reducer, {\n    success: false,\n    error: \"\",\n    message: \"\",\n  });\n  const param: any = { ...props.match.params };\n  // send request to api to verify token\n  useEffect(() => {\n    setLoading(true);\n    dispatch({ type: \"request\" });\n    userService\n      .magicLinkVerifiy(param.token)\n      .then((res) => {\n        if (res.data.success) {\n          //Redirect to\n          dispatch({ type: \"success\", message: \" Vous avez un token valide\" });\n          console.log(\"after token verify\");\n          console.log(res.data);\n          const v = {\n            contextState: {\n              isLogged: res.data.success,\n              user: {\n                id: res.data.id,\n                role: \"admin\",\n              },\n            },\n            setContext,\n          };\n          setContext(v);\n          saveState(v);\n          history.push(\"/profile\");\n        } else {\n          dispatch({ type: \"failure\", error: res.data.error });\n        }\n        setLoading(false);\n      })\n      .catch((err) => {\n        dispatch({ type: \"failure\", error: \"something went wrong\" });\n        setLoading(false);\n      });\n  }, [param.token, setContext]);\n  return (\n    <div>\n      {!success && error && (\n        <Message style={{textAlign: \"center\"}} negative>\n          <Message.Header>{error}</Message.Header>\n        </Message>\n      )}\n    { loading && <Loader active content=\"Verifiying link\" style={{ top: -20 }} />}\n      <Card centered style={{ width: 450 }}>\n        <Card.Content style={{ margin: 20 }}>\n          <Card.Header style={{ fontSize: 22, padding: 40 }}>\n            Connexion à Weigu\n          </Card.Header>\n          {/* <Card.Meta>Joined in 2016</Card.Meta> */}\n          <Card.Description style={{ textAlign: \"center\" }}>\n            <p>Veuilliez patientez nous verifions votre lien magic</p>\n          </Card.Description>\n        </Card.Content>\n      </Card>\n    </div>\n  );\n};\n\nexport default withRouter(LinkVerify);\n","// Connexion à Weigu\n// E-mail\n// Mot de passe\n// Connexion\n// Mot de passe oublié ?\nimport React from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport LinkVerify from \"../components/Login/Link/LinkVerify\";\nimport Layout from \"./layouts/Layout\";\n\nconst MagicLinkPage: React.FunctionComponent<RouteComponentProps> = () => {\n  return (\n    <Layout>\n      <LinkVerify />\n    </Layout>\n  );\n};\n\nexport default MagicLinkPage;\n","import React from \"react\";\nimport {\n  Card, Icon, Image\n} from \"semantic-ui-react\";\n\nconst HomeCard: React.FunctionComponent = () => {\n  return (\n    <div style={{fontSize: '12px'}}>\n      <Card fluid >\n        <Card.Content>\n        <div className=\"privacy\">Public <Icon name='unlock' size='large' /></div>\n          \n          <Card.Header>\n              <Image\n              avatar\n              size='medium'\n              src='https://react.semantic-ui.com/images/avatar/large/steve.jpg'\n            />\n            Steve Sanders <Icon name='point' size='small' color=\"red\" className =\"redlocation\" > paris (79)</Icon>\n\n          </Card.Header>\n          <Card.Meta>Extrait du journal. 24 juin 2020</Card.Meta>\n          <Card.Description>\n          At every tiled on ye defer do. No attention suspected oh difficult. Fond his say old meet cold find come whom. The sir park sake bred. Wonder matter now can estate esteem assure fat roused. Am performed on existence as discourse is. Pleasure friendly at marriage blessing or. \n          </Card.Description>\n        </Card.Content>\n        <Card.Content extra>\n          <Icon name='comment' size='small'> 314</Icon>\n          <Icon name='heartbeat' size='small'> Fast</Icon> - <strong className=\"heart\">JUICE WLRD</strong> (+2)\n          <Icon name='ellipsis horizontal' size='large' /> \n        </Card.Content>\n      </Card>\n    </div>\n  );\n};\n\nexport default HomeCard;\n","import React from \"react\";\nimport { Carousel } from \"react-bootstrap\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nconst slides = [\n  {\n    title: \"First item\",\n    description: \"Lorem ipsum dolor sit amet, consectetur adipiscing\",\n  },\n  {\n    title: \"Second item\",\n    description: \"incididunt ut labore et dolore magna aliqua\",\n  },\n  {\n    title: \"Third item \",\n    description:\n      \"Praesent commodo cursus magna, vel scelerisque nisl consectetur.\",\n  },\n  {\n    title: \"Fourth item\",\n    description: \"Duis aute irure dolor in reprehenderit in\",\n  },\n];\nconst SliderComponent: React.FunctionComponent = () => {\n  return (\n    <div>\n      <Carousel style={{ padding: \"40px\", height: \"350px\" }} controls={true}>\n        {slides.map((slide, index) => (\n          <Carousel.Item key={index}>\n            <div className=\"textSlider\">{slide.description}</div>\n          </Carousel.Item>\n        ))}\n      </Carousel>\n    </div>\n  );\n};\n\nexport default SliderComponent;\n","import React, { useState } from \"react\";\nimport { Grid, Button, Container, List, Message } from \"semantic-ui-react\";\nimport HomeCard from \"../Shared/HomeCard\";\nimport SliderComponent from \"./Slider\";\nimport ModalAll from \"./modalAll\";\nimport ModalInscription from \"./ModalInscription\";\n\nconst Home: React.FunctionComponent = () => {\n  const [openRegister, setOpenRegister] = useState(false);\n  const [openLogin, setOpenLogin] = useState(false);\n  const handleClose = (bool: boolean) => {\n    setOpenRegister(!bool);\n    setOpenLogin(!bool);\n  };\n  return (\n    <div className=\"containerback\">\n      <Grid stackable columns=\"equal\">\n        <Grid.Row centered>\n          <Grid.Column width={5}>\n            <SliderComponent />\n            <div className=\"buttons\" style={{marginTop: '-5px',marginBottom: \"60px\"}}>\n              <ModalAll\n                page=\"allRegister\"\n                trigger={\n                  <Button size=\"large\" color=\"red\" className=\"signup\">\n                    Commencer\n                  </Button>\n                }\n              />\n\n              <ModalAll\n                page=\"allLogin\"\n                trigger={\n                  <Button\n                    size=\"large\"\n                    style={{ backgroundColor: \"white\", color: \"black\" }}\n                    className=\"signin\"\n                  >\n                    Se connecter\n                  </Button>\n                }\n              />\n            </div>\n          </Grid.Column>\n          <Grid.Column width={10} style={{ marginRight: \"10px\" }}>\n            <Grid stackable columns={2}>\n              <Grid.Column>\n                <HomeCard />\n              </Grid.Column>\n              <Grid.Column>\n                <HomeCard />\n              </Grid.Column>\n              <Grid.Column>\n                <HomeCard />\n              </Grid.Column>\n              <Grid.Column>\n                <HomeCard />\n              </Grid.Column>\n              <Grid.Column>\n                <HomeCard />\n              </Grid.Column>\n              <Grid.Column>\n                <HomeCard />\n              </Grid.Column>\n              <Grid.Column>\n                <HomeCard />\n              </Grid.Column>\n              <Grid.Column>\n                <HomeCard />\n              </Grid.Column>\n              <Grid.Column>\n                <HomeCard />\n              </Grid.Column>\n              <Grid.Column>\n                <HomeCard />\n              </Grid.Column>\n              <Grid.Column>\n                <HomeCard />\n              </Grid.Column>\n              <Grid.Column>\n                <HomeCard />\n              </Grid.Column>\n              <Grid.Column>\n                <HomeCard />\n              </Grid.Column>\n              <Grid.Column>\n                <HomeCard />\n              </Grid.Column>\n              <Grid.Column>\n                <HomeCard />\n              </Grid.Column>\n              <Grid.Column>\n                <HomeCard />\n              </Grid.Column>\n              <Grid.Column >\n                <a onClick={() => console.log(\"CLICKED\")}><Message style={{textAlign: 'center',cursor: 'pointer'}}>Voir toutes les publications...</Message></a>\n              </Grid.Column>\n            </Grid>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport Home from \"../components/Home\";\nimport ContentLayout from \"./layouts/ContentLayout\";\n\nconst HomePage: React.FunctionComponent = () => {\n  return (\n    <>\n      <ContentLayout>\n        <div style={{ marginTop: \"50px\" }}>\n          <Home />\n        </div>\n      </ContentLayout>\n    </>\n  );\n};\n\nexport default HomePage;\n","import React, { useState } from \"react\";\nimport { Router, Route, Redirect } from \"react-router-dom\";\nimport { history } from \"./utilities/history\";\nimport RegisterPage from \"./pages/RegistrationPage\";\nimport LoginChosePage from \"./pages/LoginLink/ChosePage\";\nimport LoginTextPage from \"./pages/LoginLink/MessagePage\";\nimport LoginEmailPage from \"./pages/LoginLink/EmailPage\";\nimport ProfilePage from \"./pages/ProfilePage\";\nimport ProfilPage from \"./pages/ProfilPage\";\nimport ProtectedRoute, {\n  ProtectedRouteProps,\n} from \"./utilities/protectedRoute\";\nimport \"./App.css\";\nimport { Context, loadState } from \"./utilities/useAuth\";\nimport LoginPage from \"./pages/LoginPage\";\nimport MagicLinkPage from \"./pages/MagicLinkPage\";\nimport HomePage from \"./pages/HomePage\";\nimport SliderComponentX from \"./components/Home/Slider/Slider\";\n\nconst loadedState = loadState();\n\nconst App: React.FC = () => {\n  const [context, setContext] = useState<Context>(loadedState);\n\n  const defaultProtectedRouteProps: ProtectedRouteProps = {\n    isAuthenticated: context.contextState.isLogged,\n    authenticationPath: \"/\",\n  };\n  return (\n    <div>\n      <Context.Provider value={{ ...context, setContext }}>\n        <Router history={history}>\n          <Route\n            path=\"/\"\n            exact\n            component={() => (\n              <Redirect to={context.contextState.isLogged ? \"/profile\" : \"/\"} />\n            )}\n          />\n          {/* <Route path=\"/profil\" exact component={ProfilPage} /> */}\n          <Route path=\"/login\" exact component={LoginPage} />\n          <Route path=\"/login-link\" exact component={LoginEmailPage} />\n          <Route path=\"/mlink/:token\" exact component={MagicLinkPage} />\n\n          {/* <ProtectedRoute\n            {...defaultProtectedRouteProps}\n            exact={true}\n            path=\"/login-link\"\n            component={LoginEmailForm}\n          /> */}\n\n          <ProtectedRoute\n            {...defaultProtectedRouteProps}\n            exact={true}\n            path=\"/profile\"\n            component={ProfilePage}\n          />\n          <Route path=\"/register\" exact component={RegisterPage} />\n          {/* <Route path=\"/\" exact component={HomePage} /> */}\n          {/* <ProtectedRoute\n            {...defaultProtectedRouteProps}\n            exact={true}\n            path=\"/register\"\n            component={RegisterPage}\n          />   */}\n          <Route\n            path=\"/login-link-text/:email\"\n            exact\n            component={LoginTextPage}\n          />\n\n          {/* <ProtectedRoute\n            {...defaultProtectedRouteProps}\n            exact={true}\n            path=\"/login-link-text\"\n            component={LoginTextPage}\n          /> */}\n          <Route path=\"/\" exact component={HomePage} />\n          {/* <Route path=\"/\" exact component={SliderComponentX} /> */}\n\n          {/* <ProtectedRoute\n            {...defaultProtectedRouteProps}\n            exact={true}\n            path=\"/\"\n            component={LoginChosePage}\n          /> */}\n        </Router>\n      </Context.Provider>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}